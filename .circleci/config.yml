version: 2.1

parameters:
  base-tag:
    type: string
    default: "latestet"

jobs:
  setup:
    machine: true
    docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: Docker Login
          command: docker login -u $DOCKER_USER -p $DOCKER_PASS
      - run:
          name: Prepare Base Image
          command: |
            BASE_TAG="$(md5sum pdm.lock Dockerfile-base | awk '{print substr($1, 1, 6)}' | tr -d '\n')"
            TAG="${CIRCLE_BRANCH}"
            IMAGE_EXISTS=$(curl --silent -f -lSL https://index.docker.io/v1/repositories/unicef/etools-base/tags/${BASE_TAG})
            if [ -z "${IMAGE_EXISTS}" ]; then
              docker build -t unicef/etools-base:${BASE_TAG} -f Dockerfile-base .
              docker push unicef/etools-base:${BASE_TAG}
              if [[ "${CIRCLE_BRANCH}" == "develop" ]]; then
                docker tag unicef/etools-base:${BASE_TAG} unicef/etools-base:latestet
                docker push unicef/etools-base:latestet
              elif [[ "${CIRCLE_BRANCH}" == "master" ]]; then
                docker tag unicef/etools-base:${BASE_TAG} unicef/etools-base:latest_prodet
                docker push unicef/etools-base:latest_prodet
              fi
            fi
      - persist_to_workspace:
          root: workspace
          paths:
            - .
      - run:
          name: Save Base Tag
          command: echo "${BASE_TAG}" > workspace/BASE_TAG.txt
          when: always

  test:
    parallelism: 4
    working_directory: ~/code
    docker:
      - image: unicef/etools-base:<< pipeline.parameters.base_image_tag >>
        environment:
          DATABASE_URL: "postgis://postgres:postgres@localhost:5432/circle_test"
      - image: cimg/postgres:12.9-postgis
        environment:
          POSTGRES_PASSWORD: postgres
      - image: redis
    steps:
      - checkout
      - attach_workspace:
          at: workspace
      - run:
          name: Load Base Tag
          command: |
            BASE_TAG=$(cat workspace/BASE_TAG.txt)
            echo "export BASE_TAG=${BASE_TAG}" >> $BASH_ENV
            source $BASH_ENV
      - restore_cache:
          key: deps-{{ .Branch }}-{{ checksum "pdm.lock" }}
      - run:
          name: Run Tests in Parallel
          command: |
            pip install tox
            RUNNING_UNDER_TOX=1 tox -e d42
          no_output_timeout: 30m
      - save_cache:
          paths:
            - ".tox"
          key: deps-{{ .Branch }}-{{ checksum "pdm.lock" }}
      - store_artifacts:
          path: build/coverage
          destination: coverage

  code_checks:
    docker:
      - image: unicef/etools-base:<< parameters.base-tag >>
    steps:
      - checkout
      - run:
          name: Run Flake8
          command: |
            pip install tox
            tox -e flake8
      - run:
          name: Run Isort
          command: |
            pip install tox
            tox -e isort
      - run:
          name: Check Translations
          command: |
            pip install tox
            tox -e translations

workflows:
  version: 2.1
  build_and_test:
    jobs:
      - setup
      - code_checks:
          requires:
            - setup
      - test:
          requires:
            - code_checks