# Generated by Django 4.2.3 on 2025-04-29 08:03

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
from django.db import transaction, connection


@transaction.atomic
def create_last_mile_profiles(apps, schema_editor):
    schema = connection.schema_name
    Profile = apps.get_model('last_mile', 'Profile')
    Users = apps.get_model(settings.AUTH_USER_MODEL)
    last_mile_users = Users.objects.for_schema(schema).only_lmsm_users().distinct()
    list_profile_to_create = []
    for user in last_mile_users:
        status = "APPROVED" if user.is_active else "REJECTED"
        review_notes = "Profile created automatically by migration"
        profile = Profile(user=user, status=status, review_notes=review_notes, created_on=user.date_joined, created=user.date_joined)
        list_profile_to_create.append(profile)
    Profile.objects.bulk_create(list_profile_to_create, ignore_conflicts=True)
        

class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('last_mile', '0008_adminpanelpermission_and_more'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='adminpanelpermission',
            options={'managed': False, 'permissions': (('lmsm_admin_panel_manage_users', 'Can manage users in the admin panel'), ('lmsm_admin_panel_manage_locations', 'Can manage locations in the admin panel'), ('lmsm_admin_panel_manage_email_alerts', 'Can manage email alerts in the admin panel'), ('lmsm_admin_panel_manage_stock_management', 'Can manage stock management in the admin panel'), ('lmsm_admin_panel_manage_transfer_history', 'Can manage transfer history in the admin panel'), ('lmsm_admin_panel_approve_users', 'Can approve users in the admin panel'), ('lmsm_admin_panel_approve_locations', 'Can approve locations in the admin panel'), ('lmsm_admin_panel_approve_stock_management', 'Can approve stock management in the admin panel'))},
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', models.CharField(choices=[('PENDING', 'Pending Approval'), ('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], db_index=True, default='PENDING', help_text='The current approval status of this profile.', max_length=10, verbose_name='Approval Status')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('approved_on', models.DateTimeField(blank=True, null=True)),
                ('review_notes', models.TextField(blank=True, help_text='Optional notes from the reviewer regarding approval or rejection.', null=True, verbose_name='Review Notes')),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_last_mile_profiles', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_last_mile_profiles', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='last_mile_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RunPython(create_last_mile_profiles, reverse_code=migrations.RunPython.noop),
    ]
