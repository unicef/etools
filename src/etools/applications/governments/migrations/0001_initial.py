# Generated by Django 4.2.3 on 2024-10-10 23:14

from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_fsm
import etools.applications.audit.models
import etools.applications.partners.models
import model_utils.fields
import unicef_djangolib.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('partners', '0004_interventionreview_authorized_officer_and_more'),
        ('field_monitoring_settings', '0004_question_other'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('locations', '0001_initial'),
        ('reports', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EWPActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('wpa_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Workplan Activity ID')),
                ('wpa_gid', models.CharField(blank=True, max_length=50, null=True, verbose_name='Workplan Activity GID')),
                ('title', models.CharField(blank=True, max_length=50, null=True, verbose_name='WPA Title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='WPA Description')),
                ('total_budget', models.CharField(blank=True, max_length=50, null=True, verbose_name='Total budget')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GDD',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('number', models.CharField(blank=True, max_length=64, null=True, unique=True, verbose_name='Reference Number')),
                ('title', models.CharField(max_length=306, verbose_name='Document Title')),
                ('status', django_fsm.FSMField(blank=True, choices=[('draft', 'Development'), ('review', 'Review'), ('signature', 'Signature'), ('signed', 'Signed'), ('active', 'Active'), ('cancelled', 'Cancelled'), ('ended', 'Ended'), ('closed', 'Closed'), ('suspended', 'Suspended'), ('terminated', 'Terminated'), ('expired', 'Expired')], default='draft', max_length=32, verbose_name='Status')),
                ('start', models.DateField(blank=True, help_text='The date the GDD will start', null=True, verbose_name='Start Date')),
                ('end', models.DateField(blank=True, help_text='The date the GDD will end', null=True, verbose_name='End Date')),
                ('submission_date', models.DateField(blank=True, help_text='The date the partner submitted complete PD/SPD documents to Unicef', null=True, verbose_name='Document Submission Date by CSO')),
                ('submission_date_prc', models.DateField(blank=True, help_text='The date the documents were submitted to the PRC', null=True, verbose_name='Submission Date to PRC')),
                ('reference_number_year', models.IntegerField(null=True)),
                ('date_partnership_review_performed', models.DateField(blank=True, null=True, verbose_name='Date Final Partnership Review Performed')),
                ('review_date_prc', models.DateField(blank=True, help_text='The date the PRC reviewed the partnership', null=True, verbose_name='Review Date by PRC')),
                ('final_review_approved', models.BooleanField(default=False, verbose_name='Final Review Approved')),
                ('signed_by_unicef_date', models.DateField(blank=True, null=True, verbose_name='Signed by UNICEF Date')),
                ('signed_by_partner_date', models.DateField(blank=True, null=True, verbose_name='Signed by Partner Date')),
                ('contingency_pd', models.BooleanField(default=False, verbose_name='Contingency PD')),
                ('activation_protocol', models.TextField(blank=True, null=True, verbose_name='Activation Protocol')),
                ('population_focus', models.CharField(blank=True, max_length=130, null=True, verbose_name='Population Focus')),
                ('in_amendment', models.BooleanField(default=False, verbose_name='Amendment Open')),
                ('humanitarian_flag', models.BooleanField(default=False, verbose_name='Humanitarian')),
                ('unicef_court', models.BooleanField(default=True, verbose_name='UNICEF Editing')),
                ('date_sent_to_partner', models.DateField(blank=True, null=True, verbose_name='Date first sent to Partner')),
                ('unicef_accepted', models.BooleanField(default=False, verbose_name='UNICEF Accepted')),
                ('partner_accepted', models.BooleanField(default=False, verbose_name='Partner Accepted')),
                ('accepted_on_behalf_of_partner', models.BooleanField(default=False, verbose_name='Accepted on behalf of Partner')),
                ('cfei_number', models.CharField(blank=True, default='', max_length=150, null=True, verbose_name='UNPP Number')),
                ('context', models.TextField(blank=True, null=True, verbose_name='Context')),
                ('implementation_strategy', models.TextField(blank=True, null=True, verbose_name='Implementation Strategy')),
                ('gender_rating', models.CharField(choices=[('none', 'None'), ('marginal', 'Marginal'), ('significant', 'Significant'), ('principal', 'Principal')], default='none', max_length=50, verbose_name='Gender Rating')),
                ('gender_narrative', models.TextField(blank=True, null=True, verbose_name='Gender Narrative')),
                ('equity_rating', models.CharField(choices=[('none', 'None'), ('marginal', 'Marginal'), ('significant', 'Significant'), ('principal', 'Principal')], default='none', max_length=50, verbose_name='Equity Rating')),
                ('equity_narrative', models.TextField(blank=True, null=True, verbose_name='Equity Narrative')),
                ('sustainability_rating', models.CharField(choices=[('none', 'None'), ('marginal', 'Marginal'), ('significant', 'Significant'), ('principal', 'Principal')], default='none', max_length=50, verbose_name='Sustainability Rating')),
                ('sustainability_narrative', models.TextField(blank=True, null=True, verbose_name='Sustainability Narrative')),
                ('ip_program_contribution', models.TextField(blank=True, null=True, verbose_name='Partner Non-Financial Contribution to Programme')),
                ('hq_support_cost', models.DecimalField(decimal_places=1, default=0.0, max_digits=2, verbose_name='HQ Support Cost')),
                ('cash_transfer_modalities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('payment', 'Direct Payment'), ('reimbursement', 'Reimbursement'), ('dct', 'Direct Cash Transfer')], max_length=50, verbose_name='Cash Transfer Modalities'), default=etools.applications.partners.models.get_default_cash_transfer_modalities, size=None)),
                ('unicef_review_type', models.CharField(choices=[('none', 'None'), ('prc', 'PRC'), ('non-prc', 'Non-PRC')], default='none', max_length=50, verbose_name='UNICEF Review Type')),
                ('capacity_development', models.TextField(blank=True, null=True, verbose_name='Capacity Development')),
                ('other_info', models.TextField(blank=True, null=True, verbose_name='Other Info')),
                ('other_details', models.TextField(blank=True, null=True, verbose_name='Other Document Details')),
                ('other_partners_involved', models.TextField(blank=True, null=True, verbose_name='Other Partners Involved')),
                ('technical_guidance', models.TextField(blank=True, null=True, verbose_name='Technical Guidance')),
                ('cancel_justification', models.TextField(blank=True, null=True, verbose_name='Cancel Justification')),
                ('has_data_processing_agreement', models.BooleanField(default=False, verbose_name='Data Processing Agreement')),
                ('has_activities_involving_children', models.BooleanField(default=False, verbose_name='Activities involving children and young people')),
                ('has_special_conditions_for_construction', models.BooleanField(default=False, verbose_name='Special Conditions for Construction Works by Implementing Partners')),
                ('metadata', models.JSONField(blank=True, default=dict, null=True, verbose_name='Metadata')),
                ('confidential', models.BooleanField(default=False, verbose_name='Confidential')),
                ('agreement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='government_gdds', to='partners.agreement', verbose_name='Agreement')),
                ('budget_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='budget_owner+', to=settings.AUTH_USER_MODEL, verbose_name='Budget Owner')),
                ('country_programmes', models.ManyToManyField(blank=True, help_text='Which Country Programme does this GDD belong to?', related_name='government_gdds', to='reports.countryprogramme', verbose_name='Country Programmes')),
                ('flat_locations', models.ManyToManyField(blank=True, related_name='gdds_flat_locations', to='locations.location', verbose_name='Locations')),
                ('offices', models.ManyToManyField(blank=True, related_name='office_gdds', to='reports.office', verbose_name='Office')),
                ('partner_authorized_officer_signatory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='signed_gdds', to=settings.AUTH_USER_MODEL, verbose_name='Signed by Partner')),
                ('partner_focal_points', models.ManyToManyField(blank=True, related_name='gdds_focal_points+', to=settings.AUTH_USER_MODEL, verbose_name='CSO Authorized Officials')),
                ('partner_organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='government_gdds', to='partners.partnerorganization', verbose_name='Government')),
                ('sections', models.ManyToManyField(blank=True, related_name='gdds', to='reports.section', verbose_name='Sections')),
                ('sites', models.ManyToManyField(blank=True, related_name='gdds', to='field_monitoring_settings.locationsite', verbose_name='Sites')),
                ('unicef_focal_points', models.ManyToManyField(blank=True, related_name='unicef_gdds_focal_points+', to=settings.AUTH_USER_MODEL, verbose_name='UNICEF Focal Points')),
                ('unicef_signatory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='signed_gdds+', to=settings.AUTH_USER_MODEL, verbose_name='Signed by UNICEF')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='GDDActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Code')),
                ('context_details', models.TextField(blank=True, null=True, verbose_name='Context Details')),
                ('unicef_cash', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='UNICEF Cash')),
                ('cso_cash', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='CSO Cash')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('ewp_activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gdd_activities', to='governments.ewpactivity', verbose_name='EWP Activity')),
            ],
            options={
                'verbose_name': 'GDD Activity',
                'verbose_name_plural': 'GDD Activities',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='GDDAmendment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('kind', models.CharField(choices=[('normal', 'Normal'), ('contingency', 'Contingency')], default='normal', max_length=20, verbose_name='Kind')),
                ('is_active', models.BooleanField(default=True)),
                ('types', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('admin_error', 'Type 1: Administrative error (correction)'), ('budget_lte_20', 'Type 2: Budget <= 20%'), ('budget_gt_20', 'Type 3: Budget > 20%'), ('change', 'Type 4: Changes to planned results'), ('no_cost', 'Type 5: No cost extension'), ('other', 'Type 6: Other'), ('dates', 'Dates'), ('results', 'Results'), ('budget', 'Budget')], max_length=50, verbose_name='Types'), size=None)),
                ('other_description', models.CharField(blank=True, max_length=512, null=True, verbose_name='Description')),
                ('signed_date', models.DateField(blank=True, null=True, verbose_name='Signed Date')),
                ('amendment_number', models.CharField(max_length=15, verbose_name='Number')),
                ('signed_by_unicef_date', models.DateField(blank=True, null=True, verbose_name='Signed by UNICEF Date')),
                ('signed_by_partner_date', models.DateField(blank=True, null=True, verbose_name='Signed by Partner Date')),
                ('related_objects_map', models.JSONField(blank=True, default=dict)),
                ('difference', models.JSONField(blank=True, default=dict)),
                ('amended_gdd', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='amendment', to='governments.gdd', verbose_name='Amended GDD')),
                ('gdd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amendments', to='governments.gdd', verbose_name='Reference Number')),
                ('partner_authorized_officer_signatory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Signed by Partner')),
                ('unicef_signatory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='++', to=settings.AUTH_USER_MODEL, verbose_name='Signed by UNICEF')),
            ],
            options={
                'verbose_name': 'Amendment',
                'verbose_name_plural': 'GDD amendments',
            },
        ),
        migrations.CreateModel(
            name='GDDPlannedVisits',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('year', models.IntegerField(default=etools.applications.audit.models.get_current_year, verbose_name='Year')),
                ('programmatic_q1', models.IntegerField(default=0, verbose_name='Programmatic Q1')),
                ('programmatic_q2', models.IntegerField(default=0, verbose_name='Programmatic Q2')),
                ('programmatic_q3', models.IntegerField(default=0, verbose_name='Programmatic Q3')),
                ('programmatic_q4', models.IntegerField(default=0, verbose_name='Programmatic Q4')),
                ('gdd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='planned_visits', to='governments.gdd', verbose_name='GDD')),
            ],
            options={
                'verbose_name_plural': 'GDD Planned Visits',
            },
        ),
        migrations.CreateModel(
            name='GDDReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('relationship_is_represented', models.CharField(blank=True, choices=[('', 'Not decided yet'), ('a', 'Yes, strongly agree'), ('b', 'Yes, agree'), ('c', 'No, disagree'), ('d', 'No, strongly disagree')], max_length=10, verbose_name='The proposed relationship is best represented and regulated by partnership (as opposed to procurement), with both UNICEF and the CSO making clear contributions to the PD/SPD')),
                ('partner_comparative_advantage', models.CharField(blank=True, choices=[('', 'Not decided yet'), ('a', 'Yes, strongly agree'), ('b', 'Yes, agree'), ('c', 'No, disagree'), ('d', 'No, strongly disagree')], max_length=100, verbose_name='The partner selection evidences the CSO’s comparative advantage and value for money in relation to the planned results')),
                ('relationships_are_positive', models.CharField(blank=True, choices=[('', 'Not decided yet'), ('a', 'Yes, strongly agree'), ('b', 'Yes, agree'), ('c', 'No, disagree'), ('d', 'No, strongly disagree')], max_length=100, verbose_name='Previous UNICEF/UN relationships with the proposed CSO have been positive')),
                ('pd_is_relevant', models.CharField(blank=True, choices=[('', 'Not decided yet'), ('a', 'Yes, strongly agree'), ('b', 'Yes, agree'), ('c', 'No, disagree'), ('d', 'No, strongly disagree')], max_length=100, verbose_name='The proposed PD/SPD is relevant to achieving results in the country programme document, the relevant sector workplan and or humanitarian response plan')),
                ('pd_is_guided', models.CharField(blank=True, choices=[('', 'Not decided yet'), ('a', 'Yes, strongly agree'), ('b', 'Yes, agree'), ('c', 'No, disagree'), ('d', 'No, strongly disagree')], max_length=100, verbose_name='The results framework of the proposed PD/SPD has been guided by M&E feedback during the drafting process')),
                ('ges_considered', models.CharField(blank=True, choices=[('', 'Not decided yet'), ('a', 'Yes, strongly agree'), ('b', 'Yes, agree'), ('c', 'No, disagree'), ('d', 'No, strongly disagree')], max_length=100, verbose_name='Gender, equity and sustainability have been considered in the programme design process')),
                ('budget_is_aligned', models.CharField(blank=True, choices=[('', 'Not decided yet'), ('a', 'Yes, strongly agree'), ('b', 'Yes, agree'), ('c', 'No, disagree'), ('d', 'No, strongly disagree')], max_length=100, verbose_name='The budget of the proposed PD/SPD is aligned with the principles of value for money with the effective and efficient programme management costs adhering to office defined limits')),
                ('supply_issues_considered', models.CharField(blank=True, choices=[('', 'Not decided yet'), ('a', 'Yes, strongly agree'), ('b', 'Yes, agree'), ('c', 'No, disagree'), ('d', 'No, strongly disagree')], max_length=100, verbose_name='The relevant supply issues have been duly considered')),
                ('overall_comment', models.TextField(blank=True)),
                ('overall_approval', models.BooleanField(blank=True, null=True)),
                ('review_type', models.CharField(blank=True, choices=[('prc', 'PRC Review'), ('non-prc', 'Non-PRC Review'), ('no-review', 'No Review Required')], max_length=50, verbose_name='Types')),
                ('actions_list', models.TextField(blank=True, verbose_name='Actions List')),
                ('review_date', models.DateField(blank=True, null=True, verbose_name='Review Date')),
                ('meeting_date', models.DateField(blank=True, null=True, verbose_name='Meeting Date')),
                ('is_recommended_for_approval', models.BooleanField(default=False, verbose_name='Recommend for Approval')),
                ('sent_back_comment', models.TextField(blank=True, verbose_name='Sent Back by Secretary Comment')),
                ('amendment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='governments.gddamendment', verbose_name='Amendment')),
                ('authorized_officer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Authorized Officer')),
                ('gdd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='governments.gdd', verbose_name='GDD')),
                ('overall_approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Overall Approver')),
                ('prc_officers', models.ManyToManyField(blank=True, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='PRC Officers')),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='PRC Submitted By')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='GovernmentEWP',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Workplan Name')),
                ('workplan_id', models.CharField(blank=True, max_length=50, null=True, verbose_name='Workplan ID')),
                ('workplan_gid', models.CharField(blank=True, max_length=50, null=True, verbose_name='Workplan GID')),
                ('status', models.CharField(blank=True, max_length=50, null=True, verbose_name='Status')),
                ('cost_center_code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Cost Center Code')),
                ('cost_center_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Cost Center Name')),
                ('plan_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Plan Type')),
                ('plan_category_type', models.CharField(blank=True, max_length=50, null=True, verbose_name='Plan Category Type')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Workplan Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Workplan End Date')),
                ('cp_output', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='workplans', to='reports.countryprogramme')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GDDTimeFrame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('quarter', models.PositiveSmallIntegerField()),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
                ('gdd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quarters', to='governments.gdd', verbose_name='GDD')),
            ],
            options={
                'ordering': ('gdd', 'start_date'),
            },
        ),
        migrations.CreateModel(
            name='GDDSupplyItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('title', models.CharField(max_length=150, verbose_name='Title')),
                ('unit_number', models.DecimalField(decimal_places=2, default=1, max_digits=20, verbose_name='Unit Number')),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Unit Price')),
                ('total_price', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True, verbose_name='Total Price')),
                ('other_mentions', models.TextField(blank=True, verbose_name='Other Mentions')),
                ('provided_by', models.CharField(choices=[('unicef', 'UNICEF'), ('partner', 'Partner')], default='unicef', max_length=10, verbose_name='Provided By')),
                ('unicef_product_number', models.CharField(blank=True, default='', max_length=150, verbose_name='UNICEF Product Number')),
                ('gdd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supply_items', to='governments.gdd', verbose_name='GDD')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='GDDSpecialReportingRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('description', models.CharField(blank=True, max_length=256, verbose_name='Description')),
                ('due_date', models.DateField(verbose_name='Due Date')),
                ('gdd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='special_reporting_requirements', to='governments.gdd', verbose_name='GDD')),
            ],
            options={
                'ordering': ('-due_date',),
            },
        ),
        migrations.CreateModel(
            name='GDDRisk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('risk_type', models.CharField(choices=[('environment', 'Social & Environmental'), ('financial', 'Financial'), ('operational', 'Operational'), ('organizational', 'Organizational'), ('political', 'Political'), ('strategic', 'Strategic'), ('security', 'Safety & security')], max_length=50, verbose_name='Risk Type')),
                ('mitigation_measures', models.TextField()),
                ('gdd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='risks', to='governments.gdd', verbose_name='GDD')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='GDDReviewNotification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gov_prc_notifications', to='governments.gddreview')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gov_prc_notifications', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'ordering': ('review', '-created'),
            },
        ),
        migrations.CreateModel(
            name='GDDResultLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Code')),
                ('cp_output', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gdd_links', to='reports.result', verbose_name='CP Output')),
                ('gdd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='result_links', to='governments.gdd', verbose_name='GDD')),
                ('ram_indicators', models.ManyToManyField(blank=True, to='reports.indicator', verbose_name='RAM Indicators')),
            ],
            options={
                'ordering': ['created'],
                'unique_together': {('gdd', 'cp_output')},
            },
        ),
        migrations.CreateModel(
            name='GDDReportingRequirement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('start_date', models.DateField(null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(null=True, verbose_name='End Date')),
                ('due_date', models.DateField(verbose_name='Due Date')),
                ('report_type', models.CharField(choices=[('QPR', 'Standard Quarterly Progress Report'), ('HR', 'Humanitarian Report')], max_length=50)),
                ('gdd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reporting_requirements', to='governments.gdd', verbose_name='GDD')),
            ],
            options={
                'ordering': ('-end_date',),
            },
        ),
        migrations.CreateModel(
            name='GDDReportingPeriod',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('start_date', models.DateField(verbose_name='Reporting Period Start Date')),
                ('end_date', models.DateField(verbose_name='Reporting Period End Date')),
                ('due_date', models.DateField(verbose_name='Report Due Date')),
                ('gdd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reporting_periods', to='governments.gdd', verbose_name='GDD')),
            ],
            options={
                'ordering': ['-due_date'],
            },
        ),
        migrations.CreateModel(
            name='GDDPRCOfficerReview',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('relationship_is_represented', models.CharField(blank=True, choices=[('', 'Not decided yet'), ('a', 'Yes, strongly agree'), ('b', 'Yes, agree'), ('c', 'No, disagree'), ('d', 'No, strongly disagree')], max_length=10, verbose_name='The proposed relationship is best represented and regulated by partnership (as opposed to procurement), with both UNICEF and the CSO making clear contributions to the PD/SPD')),
                ('partner_comparative_advantage', models.CharField(blank=True, choices=[('', 'Not decided yet'), ('a', 'Yes, strongly agree'), ('b', 'Yes, agree'), ('c', 'No, disagree'), ('d', 'No, strongly disagree')], max_length=100, verbose_name='The partner selection evidences the CSO’s comparative advantage and value for money in relation to the planned results')),
                ('relationships_are_positive', models.CharField(blank=True, choices=[('', 'Not decided yet'), ('a', 'Yes, strongly agree'), ('b', 'Yes, agree'), ('c', 'No, disagree'), ('d', 'No, strongly disagree')], max_length=100, verbose_name='Previous UNICEF/UN relationships with the proposed CSO have been positive')),
                ('pd_is_relevant', models.CharField(blank=True, choices=[('', 'Not decided yet'), ('a', 'Yes, strongly agree'), ('b', 'Yes, agree'), ('c', 'No, disagree'), ('d', 'No, strongly disagree')], max_length=100, verbose_name='The proposed PD/SPD is relevant to achieving results in the country programme document, the relevant sector workplan and or humanitarian response plan')),
                ('pd_is_guided', models.CharField(blank=True, choices=[('', 'Not decided yet'), ('a', 'Yes, strongly agree'), ('b', 'Yes, agree'), ('c', 'No, disagree'), ('d', 'No, strongly disagree')], max_length=100, verbose_name='The results framework of the proposed PD/SPD has been guided by M&E feedback during the drafting process')),
                ('ges_considered', models.CharField(blank=True, choices=[('', 'Not decided yet'), ('a', 'Yes, strongly agree'), ('b', 'Yes, agree'), ('c', 'No, disagree'), ('d', 'No, strongly disagree')], max_length=100, verbose_name='Gender, equity and sustainability have been considered in the programme design process')),
                ('budget_is_aligned', models.CharField(blank=True, choices=[('', 'Not decided yet'), ('a', 'Yes, strongly agree'), ('b', 'Yes, agree'), ('c', 'No, disagree'), ('d', 'No, strongly disagree')], max_length=100, verbose_name='The budget of the proposed PD/SPD is aligned with the principles of value for money with the effective and efficient programme management costs adhering to office defined limits')),
                ('supply_issues_considered', models.CharField(blank=True, choices=[('', 'Not decided yet'), ('a', 'Yes, strongly agree'), ('b', 'Yes, agree'), ('c', 'No, disagree'), ('d', 'No, strongly disagree')], max_length=100, verbose_name='The relevant supply issues have been duly considered')),
                ('overall_comment', models.TextField(blank=True)),
                ('overall_approval', models.BooleanField(blank=True, null=True)),
                ('review_date', models.DateField(blank=True, null=True, verbose_name='Review Date')),
                ('overall_review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gov_prc_reviews', to='governments.gddreview')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gov_prc_reviews', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='GDDPlannedVisitSite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quarter', models.PositiveSmallIntegerField(choices=[(1, 'Q1'), (2, 'Q2'), (3, 'Q3'), (4, 'Q4')])),
                ('planned_visits', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='governments.gddplannedvisits')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='field_monitoring_settings.locationsite')),
            ],
            options={
                'unique_together': {('planned_visits', 'site', 'quarter')},
            },
        ),
        migrations.AddField(
            model_name='gddplannedvisits',
            name='sites',
            field=models.ManyToManyField(blank=True, through='governments.GDDPlannedVisitSite', to='field_monitoring_settings.locationsite', verbose_name='Sites'),
        ),
        migrations.CreateModel(
            name='GDDBudget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('partner_contribution', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Partner Contribution')),
                ('unicef_cash', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Unicef Cash')),
                ('in_kind_amount', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='UNICEF Supplies')),
                ('total', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Total')),
                ('partner_contribution_local', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Partner Contribution Local')),
                ('partner_supply_local', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Partner Supplies Local')),
                ('total_partner_contribution_local', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Total Partner Contribution')),
                ('total_unicef_cash_local_wo_hq', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Total HQ Cash Local')),
                ('total_hq_cash_local', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Total HQ Cash Local')),
                ('unicef_cash_local', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Unicef Cash Local')),
                ('in_kind_amount_local', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='UNICEF Supplies Local')),
                ('currency', unicef_djangolib.fields.CurrencyField(blank=True, choices=[('GIP', 'GIP'), ('KPW', 'KPW'), ('XEU', 'XEU'), ('BHD', 'BHD'), ('BIF', 'BIF'), ('BMD', 'BMD'), ('BSD', 'BSD'), ('AFN', 'AFN'), ('ALL', 'ALL'), ('AMD', 'AMD'), ('AUD', 'AUD'), ('AZN', 'AZN'), ('BAM', 'BAM'), ('BBD', 'BBD'), ('BDT', 'BDT'), ('BZD', 'BZD'), ('CUP1', 'CUP1'), ('BTN', 'BTN'), ('ZWL', 'ZWL'), ('AWG', 'AWG'), ('CUC', 'CUC'), ('VEF01', 'VEF01'), ('BND', 'BND'), ('BRL', 'BRL'), ('ARS', 'ARS'), ('ETB', 'ETB'), ('EUR', 'EUR'), ('FJD', 'FJD'), ('GBP', 'GBP'), ('GEL', 'GEL'), ('GHS', 'GHS'), ('GNF', 'GNF'), ('GTQ', 'GTQ'), ('GYD', 'GYD'), ('HNL', 'HNL'), ('CAD', 'CAD'), ('CDF', 'CDF'), ('CLP', 'CLP'), ('CNY', 'CNY'), ('COP', 'COP'), ('CRC', 'CRC'), ('CUP', 'CUP'), ('CVE', 'CVE'), ('DJF', 'DJF'), ('DKK', 'DKK'), ('DOP', 'DOP'), ('DZD', 'DZD'), ('EGP', 'EGP'), ('HRK', 'HRK'), ('LVL', 'LVL'), ('LYD', 'LYD'), ('MAD', 'MAD'), ('MGA', 'MGA'), ('MKD', 'MKD'), ('KWD', 'KWD'), ('KYD', 'KYD'), ('LBP', 'LBP'), ('LKR', 'LKR'), ('MDL', 'MDL'), ('KZT', 'KZT'), ('LRD', 'LRD'), ('BOB', 'BOB'), ('HKD', 'HKD'), ('CHF', 'CHF'), ('KES', 'KES'), ('MYR', 'MYR'), ('NGN', 'NGN'), ('KMF', 'KMF'), ('SCR', 'SCR'), ('SEK', 'SEK'), ('TTD', 'TTD'), ('PKR', 'PKR'), ('NIO', 'NIO'), ('RWF', 'RWF'), ('BWP', 'BWP'), ('JMD', 'JMD'), ('TJS', 'TJS'), ('UYU', 'UYU'), ('RON', 'RON'), ('PYG', 'PYG'), ('SYP', 'SYP'), ('LAK', 'LAK'), ('ERN', 'ERN'), ('SLL', 'SLL'), ('PLN', 'PLN'), ('JOD', 'JOD'), ('ILS', 'ILS'), ('AED', 'AED'), ('NPR', 'NPR'), ('NZD', 'NZD'), ('SGD', 'SGD'), ('JPY', 'JPY'), ('PAB', 'PAB'), ('ZMW', 'ZMW'), ('CZK', 'CZK'), ('SOS', 'SOS'), ('LTL', 'LTL'), ('KGS', 'KGS'), ('SHP', 'SHP'), ('BGN', 'BGN'), ('TOP', 'TOP'), ('MVR', 'MVR'), ('VEF02', 'VEF02'), ('TMT', 'TMT'), ('GMD', 'GMD'), ('MZN', 'MZN'), ('RSD', 'RSD'), ('MWK', 'MWK'), ('PGK', 'PGK'), ('MXN', 'MXN'), ('XAF', 'XAF'), ('VND', 'VND'), ('INR', 'INR'), ('NOK', 'NOK'), ('XPF', 'XPF'), ('SSP', 'SSP'), ('IQD', 'IQD'), ('SRD', 'SRD'), ('SAR', 'SAR'), ('XCD', 'XCD'), ('IRR', 'IRR'), ('KPW01', 'KPW01'), ('HTG', 'HTG'), ('IDR', 'IDR'), ('XOF', 'XOF'), ('ISK', 'ISK'), ('ANG', 'ANG'), ('NAD', 'NAD'), ('MMK', 'MMK'), ('STD', 'STD'), ('VUV', 'VUV'), ('LSL', 'LSL'), ('SVC', 'SVC'), ('KHR', 'KHR'), ('SZL', 'SZL'), ('RUB', 'RUB'), ('UAH', 'UAH'), ('UGX', 'UGX'), ('THB', 'THB'), ('AOA', 'AOA'), ('YER', 'YER'), ('USD', 'USD'), ('UZS', 'UZS'), ('OMR', 'OMR'), ('SBD', 'SBD'), ('TZS', 'TZS'), ('SDG', 'SDG'), ('WST', 'WST'), ('QAR', 'QAR'), ('MOP', 'MOP'), ('MRU', 'MRU'), ('VEF', 'VEF'), ('TRY', 'TRY'), ('ZAR', 'ZAR'), ('HUF', 'HUF'), ('MUR', 'MUR'), ('PHP', 'PHP'), ('BYN', 'BYN'), ('KRW', 'KRW'), ('TND', 'TND'), ('MNT', 'MNT'), ('PEN', 'PEN')], default='', max_length=5, verbose_name='Currency')),
                ('total_local', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Total Local')),
                ('programme_effectiveness', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='Programme Effectiveness (%)')),
                ('gdd', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='planned_budget', to='governments.gdd', verbose_name='GDD')),
            ],
            options={
                'verbose_name_plural': 'GDD budget',
            },
        ),
        migrations.CreateModel(
            name='GDDAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('active', models.BooleanField(default=True)),
                ('gdd', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='governments.gdd', verbose_name='GDD')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='partners.filetype', verbose_name='Type')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='GDDActivityItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Code')),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('unit', models.CharField(max_length=150, verbose_name='Unit')),
                ('unit_price', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Unit Price')),
                ('no_units', models.DecimalField(decimal_places=2, max_digits=20, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Units Number')),
                ('unicef_cash', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='UNICEF Cash')),
                ('cso_cash', models.DecimalField(decimal_places=2, default=0, max_digits=20, verbose_name='CSO Cash')),
                ('activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='governments.gddactivity', verbose_name='GDD Activity')),
            ],
            options={
                'verbose_name': 'GDD Activity Item',
                'verbose_name_plural': 'GDD Activity Items',
                'ordering': ('id',),
            },
        ),
        migrations.AddField(
            model_name='gddactivity',
            name='time_frames',
            field=models.ManyToManyField(blank=True, related_name='activities', to='governments.gddtimeframe', verbose_name='Time Frames Enabled'),
        ),
        migrations.CreateModel(
            name='EWPResultLink',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Code')),
                ('key_intervention', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ewp_result_links', to='reports.result', verbose_name='Key Intervention')),
                ('ram_indicators', models.ManyToManyField(blank=True, to='reports.indicator', verbose_name='RAM Indicators')),
                ('workplan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ewp_result_links', to='governments.governmentewp', verbose_name='Workplan')),
            ],
            options={
                'ordering': ['created'],
            },
        ),
        migrations.AddField(
            model_name='ewpactivity',
            name='ewp_result_link',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ewp_activity', to='governments.ewpresultlink'),
        ),
        migrations.AddField(
            model_name='ewpactivity',
            name='locations',
            field=models.ManyToManyField(blank=True, related_name='ewp_activities', to='locations.location'),
        ),
        migrations.AddField(
            model_name='ewpactivity',
            name='partners',
            field=models.ManyToManyField(blank=True, related_name='ewp_activities', to='partners.partnerorganization'),
        ),
        migrations.AlterUniqueTogether(
            name='gddplannedvisits',
            unique_together={('gdd', 'year')},
        ),
        migrations.CreateModel(
            name='GDDKeyIntervention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('name', models.CharField(max_length=500, verbose_name='Name')),
                ('code', models.CharField(blank=True, max_length=50, null=True, verbose_name='Code')),
                ('result_link', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ll_results', to='governments.gddresultlink', verbose_name='Result Link')),
            ],
            options={
                'ordering': ('created',),
                'unique_together': {('result_link', 'code')},
            },
        ),
    ]
