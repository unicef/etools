# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-05-22 07:36
from __future__ import unicode_literals

from django.db import migrations


# tpm action point, action point
statuses_mapping = {
    'open': 'open',
    'completed': 'completed',
}
reverse_statuses_mapping = dict(zip(statuses_mapping.values(), statuses_mapping.keys()))


def migrate_action_points(apps, schema_editor):
    ActionPoint = apps.get_model('action_points', 'ActionPoint')
    TPMActionPoint = apps.get_model('tpm', 'TPMActionPoint')

    action_points_to_create = []

    for action_point in TPMActionPoint.objects.all():
        activity = action_point.tpm_visit.tpm_activities.first()
        if not activity:
            continue

        new_action_point = ActionPoint(
            tpm_activity=activity,
            partner=activity.partner,
            intervention=activity.intervention,
            cp_output=activity.cp_output,

            description=action_point.description,
            due_date=action_point.due_date,
            author=action_point.author,
            assigned_by=action_point.author,
            assigned_to=action_point.person_responsible,
            status=statuses_mapping.get(action_point.status, 'open'),
        )
        action_points_to_create.append(new_action_point)

    ActionPoint.objects.bulk_create(action_points_to_create)


def migrate_action_points_backward(apps, schema_editor):
    ActionPoint = apps.get_model('action_points', 'ActionPoint')
    TPMActionPoint = apps.get_model('tpm', 'TPMActionPoint')

    action_points_to_create = []

    for action_point in ActionPoint.objects.filter(tpm_activity__isnull=False):
        new_action_point = TPMActionPoint(
            tpm_visit=action_point.tpm_activity.tpm_visit,
            description=action_point.description,
            due_date=action_point.due_date,
            author=action_point.author,
            person_responsible=action_point.assigned_to,
            status=reverse_statuses_mapping[action_point.status],
        )
        action_points_to_create.append(new_action_point)
        action_point.delete()

    TPMActionPoint.objects.bulk_create(action_points_to_create)


class Migration(migrations.Migration):

    dependencies = [
        ('action_points', '0004_auto_20180521_1052'),
        ('tpm', '0005_tpmvisit_author'),
    ]

    operations = [
        migrations.RunPython(migrate_action_points, migrate_action_points_backward),
        migrations.RemoveField(
            model_name='tpmactionpoint',
            name='author',
        ),
        migrations.RemoveField(
            model_name='tpmactionpoint',
            name='person_responsible',
        ),
        migrations.RemoveField(
            model_name='tpmactionpoint',
            name='tpm_visit',
        ),
        migrations.DeleteModel(
            name='TPMActionPoint',
        ),
        migrations.CreateModel(
            name='TPMActionPoint',
            fields=[
            ],
            options={
                'verbose_name': 'Engagement Action Point',
                'verbose_name_plural': 'Engagement Action Points',
                'abstract': False,
                'proxy': True,
            },
            bases=('action_points.actionpoint',),
        ),
    ]
