# Generated by Django 3.2.19 on 2023-10-24 11:31

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
from django.utils.timezone import utc
import django_fsm
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tpmpartners', '0001_initial'),
        # ('action_points', '0004_initial'),
        # ('activities', '0002_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        # ('reports', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='TPMVisit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('deleted_at', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0, tzinfo=utc), verbose_name='Deleted At')),
                ('status', django_fsm.FSMField(choices=[('draft', 'Draft'), ('assigned', 'Assigned'), ('cancelled', 'Cancelled'), ('tpm_accepted', 'TPM Accepted'), ('tpm_rejected', 'TPM Rejected'), ('tpm_reported', 'TPM Reported'), ('tpm_report_rejected', 'Sent Back to TPM'), ('unicef_approved', 'UNICEF Approved')], default='draft', max_length=20, protected=True, verbose_name='Status')),
                ('cancel_comment', models.TextField(blank=True, verbose_name='Cancel Comment')),
                ('reject_comment', models.TextField(blank=True, verbose_name='Reason for Rejection')),
                ('approval_comment', models.TextField(blank=True, verbose_name='Approval Comments')),
                ('visit_information', models.TextField(blank=True, verbose_name='Visit Information')),
                ('date_of_assigned', models.DateField(blank=True, null=True, verbose_name='Date of Assigned')),
                ('date_of_cancelled', models.DateField(blank=True, null=True, verbose_name='Date of Cancelled')),
                ('date_of_tpm_accepted', models.DateField(blank=True, null=True, verbose_name='Date of TPM Accepted')),
                ('date_of_tpm_rejected', models.DateField(blank=True, null=True, verbose_name='Date of TPM Rejected')),
                ('date_of_tpm_reported', models.DateField(blank=True, null=True, verbose_name='Date of TPM Reported')),
                ('date_of_tpm_report_rejected', models.DateField(blank=True, null=True, verbose_name='Date of Sent Back to TPM')),
                ('date_of_unicef_approved', models.DateField(blank=True, null=True, verbose_name='Date of UNICEF Approved')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('tpm_partner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='tpmpartners.tpmpartner', verbose_name='TPM Vendor')),
                ('tpm_partner_focal_points', models.ManyToManyField(blank=True, related_name='tpm_visits', to=settings.AUTH_USER_MODEL, verbose_name='TPM Focal Points')),
            ],
            options={
                'verbose_name': 'TPM Visit',
                'verbose_name_plural': 'TPM Visits',
                'ordering': ('id',),
            },
            managers=[
                ('admin_objects', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='TPMActionPoint',
            fields=[
            ],
            options={
                'verbose_name': 'TPM Action Point',
                'verbose_name_plural': 'TPM Action Points',
                'abstract': False,
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('action_points.actionpoint',),
        ),
        migrations.CreateModel(
            name='TPMVisitReportRejectComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rejected_at', models.DateTimeField(auto_now_add=True, verbose_name='Rejected At')),
                ('reject_reason', models.TextField(verbose_name='Reason for Rejection')),
                ('tpm_visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_reject_comments', to='tpm.tpmvisit', verbose_name='Visit')),
            ],
            options={
                'verbose_name_plural': 'Report Reject Comments',
                'ordering': ['tpm_visit', 'id'],
            },
        ),
        migrations.CreateModel(
            name='TPMActivity',
            fields=[
                ('activity_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='activities.activity')),
                ('additional_information', models.TextField(blank=True, verbose_name='Additional Information')),
                ('is_pv', models.BooleanField(default=False, verbose_name='HACT Programmatic Visit')),
                ('offices', models.ManyToManyField(blank=True, to='reports.Office', verbose_name='Office(s) of UNICEF Focal Point(s)')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tpm_activities', to='reports.section', verbose_name='Section')),
                ('tpm_visit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tpm_activities', to='tpm.tpmvisit', verbose_name='Visit')),
                ('unicef_focal_points', models.ManyToManyField(blank=True, related_name='_tpm_tpmactivity_unicef_focal_points_+', to=settings.AUTH_USER_MODEL, verbose_name='UNICEF Focal Points')),
            ],
            options={
                'verbose_name_plural': 'TPM Activities',
                'ordering': ['tpm_visit', 'id'],
            },
            bases=('activities.activity',),
        ),
    ]
