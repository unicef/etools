# Generated by Django 3.2.19 on 2023-10-24 15:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('field_monitoring_planning', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('partners', '0002_initial'),
        ('reports', '0002_initial'),
        ('field_monitoring_settings', '0003_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Question Text')),
                ('is_hact', models.BooleanField(default=False, verbose_name='Count as HACT')),
                ('specific_details', models.TextField(blank=True, verbose_name='Specific Details To Probe')),
                ('is_enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('cp_output', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='reports.result', verbose_name='CP Output')),
                ('intervention', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='partners.intervention', verbose_name='Intervention')),
                ('monitoring_activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='field_monitoring_planning.monitoringactivity', verbose_name='Activity')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='partners.partnerorganization', verbose_name='Partner')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activity_questions', to='field_monitoring_settings.question', verbose_name='Question')),
            ],
            options={
                'verbose_name': 'Activity Question',
                'verbose_name_plural': 'Activity Questions',
                'ordering': ('monitoring_activity', 'id'),
            },
        ),
        migrations.CreateModel(
            name='StartedChecklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('information_source', models.CharField(blank=True, max_length=100, verbose_name='Information Source')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='checklists', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
                ('method', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='checklists', to='field_monitoring_settings.method', verbose_name='Methods')),
                ('monitoring_activity', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='checklists', to='field_monitoring_planning.monitoringactivity', verbose_name='Activity')),
            ],
            options={
                'verbose_name': 'Started Checklist',
                'verbose_name_plural': 'Started Checklists',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Finding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.JSONField(blank=True, null=True, verbose_name='Value')),
                ('activity_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='findings', to='field_monitoring_data_collection.activityquestion', verbose_name='Activity Question')),
                ('started_checklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='findings', to='field_monitoring_data_collection.startedchecklist', verbose_name='Checklist')),
            ],
            options={
                'verbose_name': 'Checklist Finding',
                'verbose_name_plural': 'Checklist Findings',
                'ordering': ('started_checklist', 'id'),
            },
        ),
        migrations.CreateModel(
            name='ChecklistOverallFinding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('narrative_finding', models.TextField(blank=True, verbose_name='Narrative Finding')),
                ('cp_output', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='reports.result', verbose_name='CP Output')),
                ('intervention', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='partners.intervention', verbose_name='Intervention')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='partners.partnerorganization', verbose_name='Partner')),
                ('started_checklist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overall_findings', to='field_monitoring_data_collection.startedchecklist', verbose_name='Checklist')),
            ],
            options={
                'verbose_name': 'Checklist Overall Finding',
                'verbose_name_plural': 'Checklist Overall Findings',
                'ordering': ('started_checklist', 'id'),
            },
        ),
        migrations.CreateModel(
            name='ActivityQuestionOverallFinding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.JSONField(blank=True, null=True, verbose_name='Value')),
                ('activity_question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='overall_finding', to='field_monitoring_data_collection.activityquestion', verbose_name='Activity')),
            ],
            options={
                'verbose_name': 'Overall Activity Question Finding',
                'verbose_name_plural': 'Overall Activity Question Findings',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='ActivityOverallFinding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('narrative_finding', models.TextField(blank=True, verbose_name='Narrative Finding')),
                ('on_track', models.BooleanField(blank=True, null=True)),
                ('cp_output', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='reports.result', verbose_name='CP Output')),
                ('intervention', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='partners.intervention', verbose_name='Intervention')),
                ('monitoring_activity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='overall_findings', to='field_monitoring_planning.monitoringactivity', verbose_name='Activity')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='partners.partnerorganization', verbose_name='Partner')),
            ],
            options={
                'verbose_name': 'Activity Overall Finding',
                'verbose_name_plural': 'Activity Overall Findings',
                'ordering': ('monitoring_activity', 'id'),
            },
        ),
    ]
