# Generated by Django 4.2.3 on 2024-11-21 13:26

from django.conf import settings
from django.db import migrations, models


def migrate_foreignkey_to_manytomany(apps, schema_editor):
    MonitoringActivity = apps.get_model('field_monitoring_planning', 'MonitoringActivity')
    for monitoring_activity in MonitoringActivity.objects.all():
        if monitoring_activity.report_reviewer:  # Assuming old ForeignKey was named `author`
            monitoring_activity.report_reviewers.add(monitoring_activity.report_reviewer)
class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('field_monitoring_planning', '0005_tpmconcern'),
    ]

    operations = [
        migrations.AddField(
            model_name='monitoringactivity',
            name='report_reviewers',
            field=models.ManyToManyField(blank=True, null=True, related_name='activities_to_review', to=settings.AUTH_USER_MODEL, verbose_name='Report Reviewer'),
        ),
        migrations.RunPython(migrate_foreignkey_to_manytomany),
        migrations.RemoveField(
            model_name='monitoringactivity',
            name='report_reviewer',
        ),
    ]
