# Generated by Django 3.2.19 on 2023-10-24 11:31

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.utils.timezone import utc
import django_fsm
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tpmpartners', '0001_initial'),
        ('action_points', '0002_initial'),
        ('partners', '0002_initial'),
        ('locations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('field_monitoring_settings', '0003_initial'),
        ('reports', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MonitoringActivity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('deleted_at', models.DateTimeField(default=datetime.datetime(1970, 1, 1, 0, 0, tzinfo=utc), verbose_name='Deleted At')),
                ('number', models.CharField(blank=True, editable=False, max_length=64, null=True, unique=True, verbose_name='Reference Number')),
                ('monitor_type', models.CharField(choices=[('staff', 'Staff'), ('tpm', 'TPM')], default='staff', max_length=10)),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End Date')),
                ('status', django_fsm.FSMField(choices=[('draft', 'Draft'), ('checklist', 'Checklist'), ('review', 'Review'), ('assigned', 'Assigned'), ('data_collection', 'Data Collection'), ('report_finalization', 'Report Finalization'), ('submitted', 'Submitted'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20, verbose_name='Status')),
                ('reject_reason', models.TextField(blank=True, verbose_name='Rejection reason')),
                ('report_reject_reason', models.TextField(blank=True, verbose_name='Report rejection reason')),
                ('cancel_reason', models.TextField(blank=True, verbose_name='Cancellation reason')),
                ('cp_outputs', models.ManyToManyField(blank=True, related_name='monitoring_activities', to='reports.Result', verbose_name='Outputs')),
                ('field_office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reports.office', verbose_name='Field Office')),
                ('interventions', models.ManyToManyField(blank=True, related_name='monitoring_activities', to='partners.Intervention', verbose_name='PD/SPD')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_activities', to='locations.location', verbose_name='Location')),
                ('location_site', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_activities', to='field_monitoring_settings.locationsite', verbose_name='Site')),
                ('offices', models.ManyToManyField(blank=True, related_name='offices', to='reports.Office', verbose_name='Field Offices')),
                ('partners', models.ManyToManyField(blank=True, related_name='monitoring_activities', to='partners.PartnerOrganization', verbose_name='Partner')),
                ('sections', models.ManyToManyField(blank=True, to='reports.Section', verbose_name='Sections')),
                ('team_members', models.ManyToManyField(blank=True, related_name='monitoring_activities', to=settings.AUTH_USER_MODEL, verbose_name='Team Members')),
                ('tpm_partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tpmpartners.tpmpartner', verbose_name='TPM Partner')),
                ('visit_lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Person Responsible')),
            ],
            options={
                'verbose_name': 'Monitoring Activity',
                'verbose_name_plural': 'Monitoring Activities',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='YearPlan',
            fields=[
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('year', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('prioritization_criteria', models.TextField(blank=True, verbose_name='Prioritization Criteria')),
                ('methodology_notes', models.TextField(blank=True, verbose_name='Methodology Notes & Standards')),
                ('target_visits', models.PositiveSmallIntegerField(blank=True, default=0, verbose_name='Target Visits For The Year')),
                ('modalities', models.TextField(blank=True, verbose_name='Modalities')),
                ('partner_engagement', models.TextField(blank=True, verbose_name='Partner Engagement')),
                ('other_aspects', models.TextField(blank=True, verbose_name='Other Aspects of the Field Monitoring Plan')),
            ],
            options={
                'verbose_name': 'Year Plan',
                'verbose_name_plural': 'Year Plans',
                'ordering': ('year',),
            },
        ),
        migrations.CreateModel(
            name='MonitoringActivityActionPoint',
            fields=[
            ],
            options={
                'verbose_name': 'Monitoring Activity Action Point',
                'verbose_name_plural': 'Monitoring Activity Action Points',
                'abstract': False,
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('action_points.actionpoint',),
        ),
        migrations.CreateModel(
            name='QuestionTemplate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True, verbose_name='Is Active')),
                ('specific_details', models.TextField(blank=True, verbose_name='Specific Details To Probe')),
                ('cp_output', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='reports.result', verbose_name='CP Output')),
                ('intervention', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='partners.intervention', verbose_name='Intervention')),
                ('partner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='partners.partnerorganization', verbose_name='Partner')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='templates', to='field_monitoring_settings.question', verbose_name='Question')),
            ],
            options={
                'verbose_name': 'Question Template',
                'verbose_name_plural': 'Question Templates',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='MonitoringActivityGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monitoring_activities', models.ManyToManyField(related_name='groups', to='field_monitoring_planning.MonitoringActivity')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_activity_groups', to='partners.partnerorganization')),
            ],
        ),
    ]
