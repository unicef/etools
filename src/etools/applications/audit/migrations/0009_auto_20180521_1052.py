# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-05-21 10:52
from __future__ import unicode_literals

from django.db import migrations


# engagement action point, action point
statuses_mapping = {
    'open': 'open',
    'closed': 'completed',
}
reverse_statuses_mapping = dict(zip(statuses_mapping.values(), statuses_mapping.keys()))


def migrate_action_points(apps, schema_editor):
    ActionPoint = apps.get_model('action_points', 'ActionPoint')
    EngagementActionPoint = apps.get_model('audit', 'EngagementActionPoint')

    action_points_to_create = []

    for action_point in EngagementActionPoint.objects.all():
        new_action_point = ActionPoint(
            engagement=action_point.engagement,
            partner=action_point.engagement.partner,
            description=action_point.description,
            due_date=action_point.due_date,
            author=action_point.author,
            assigned_by=action_point.author,
            assigned_to=action_point.person_responsible,
            status=statuses_mapping.get(action_point.status, 'open'),
            high_priority=action_point.high_priority,
        )
        action_points_to_create.append(new_action_point)

    ActionPoint.objects.bulk_create(action_points_to_create)


def migrate_action_points_backward(apps, schema_editor):
    ActionPoint = apps.get_model('action_points', 'ActionPoint')
    EngagementActionPoint = apps.get_model('audit', 'EngagementActionPoint')

    action_points_to_create = []

    for action_point in ActionPoint.objects.filter(engagement__isnull=False):
        new_action_point = EngagementActionPoint(
            category="Other",
            engagement=action_point.engagement,
            description=action_point.description,
            due_date=action_point.due_date,
            author=action_point.author,
            person_responsible=action_point.assigned_to,
            status=reverse_statuses_mapping[action_point.status],
            high_priority=action_point.high_priority,
        )
        action_points_to_create.append(new_action_point)

    EngagementActionPoint.objects.bulk_create(action_points_to_create)


class Migration(migrations.Migration):

    dependencies = [
        ('action_points', '0004_auto_20180521_1052'),
        ('audit', '0008_auto_20180502_1338'),
    ]

    operations = [
        migrations.RunPython(migrate_action_points, migrate_action_points_backward),
        migrations.RemoveField(
            model_name='engagementactionpoint',
            name='author',
        ),
        migrations.RemoveField(
            model_name='engagementactionpoint',
            name='engagement',
        ),
        migrations.RemoveField(
            model_name='engagementactionpoint',
            name='person_responsible',
        ),
        migrations.DeleteModel(
            name='EngagementActionPoint',
        ),
        migrations.CreateModel(
            name='EngagementActionPoint',
            fields=[
            ],
            options={
                'verbose_name': 'Engagement Action Point',
                'verbose_name_plural': 'Engagement Action Points',
                'abstract': False,
                'proxy': True,
            },
            bases=('action_points.actionpoint',),
        ),
    ]
