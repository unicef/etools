# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2018-03-26 16:05

import django.contrib.postgres.fields
import django.contrib.postgres.fields.jsonb
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import django_fsm
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AuditPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(max_length=30)),
                ('permission', models.CharField(choices=[('view', 'View'),
                                                         ('edit', 'Edit'), ('action', 'Action')], max_length=10)),
                ('permission_type', models.CharField(choices=[
                 ('allow', 'Allow'), ('disallow', 'Disallow')], default='allow', max_length=10)),
                ('target', models.CharField(max_length=100)),
                ('instance_status', models.CharField(max_length=32, verbose_name='Instance Status')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DetailedFindingInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finding', models.TextField(verbose_name='Description of Finding')),
                ('recommendation', models.TextField(verbose_name='Recommendation and IP Management Response')),
            ],
        ),
        migrations.CreateModel(
            name='Engagement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(
                    default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(
                    default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('status', django_fsm.FSMField(choices=[('partner_contacted', 'IP Contacted'), ('report_submitted', 'Report Submitted'), (
                    'final', 'Final Report'), ('cancelled', 'Cancelled')], default='partner_contacted', max_length=30, protected=True, verbose_name='Status')),
                ('partner_contacted_at', models.DateField(blank=True, null=True, verbose_name='Date IP was contacted')),
                ('engagement_type', models.CharField(choices=[('audit', 'Audit'), ('ma', 'Micro Assessment'), (
                    'sc', 'Spot Check'), ('sa', 'Special Audit')], max_length=10, verbose_name='Engagement Type')),
                ('start_date', models.DateField(blank=True, null=True, verbose_name='Period Start Date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Period End Date')),
                ('total_value', models.DecimalField(blank=True, decimal_places=2, max_digits=20,
                                                    null=True, verbose_name='Total value of selected FACE form(s)')),
                ('date_of_field_visit', models.DateField(blank=True, null=True, verbose_name='Date of Field Visit')),
                ('date_of_draft_report_to_ip', models.DateField(blank=True,
                                                                null=True, verbose_name='Date Draft Report Issued to IP')),
                ('date_of_comments_by_ip', models.DateField(blank=True,
                                                            null=True, verbose_name='Date Comments Received from IP')),
                ('date_of_draft_report_to_unicef', models.DateField(blank=True,
                                                                    null=True, verbose_name='Date Draft Report Issued to UNICEF')),
                ('date_of_comments_by_unicef', models.DateField(blank=True,
                                                                null=True, verbose_name='Date Comments Received from UNICEF')),
                ('date_of_report_submit', models.DateField(blank=True, null=True, verbose_name='Date Report Submitted')),
                ('date_of_final_report', models.DateField(blank=True, null=True, verbose_name='Date Report Finalized')),
                ('date_of_cancel', models.DateField(blank=True, null=True, verbose_name='Date Report Cancelled')),
                ('amount_refunded', models.DecimalField(blank=True, decimal_places=2,
                                                        max_digits=20, null=True, verbose_name='Amount Refunded')),
                ('additional_supporting_documentation_provided', models.DecimalField(blank=True, decimal_places=2,
                                                                                     max_digits=20, null=True, verbose_name='Additional Supporting Documentation Provided')),
                ('justification_provided_and_accepted', models.DecimalField(blank=True, decimal_places=2,
                                                                            max_digits=20, null=True, verbose_name='Justification Provided and Accepted')),
                ('write_off_required', models.DecimalField(blank=True, decimal_places=2,
                                                           max_digits=20, null=True, verbose_name='Impairment')),
                ('explanation_for_additional_information', models.TextField(
                    blank=True, verbose_name='Provide explanation for additional information received from the IP or add attachments')),
                ('joint_audit', models.BooleanField(default=False, verbose_name='Joint Audit')),
                ('shared_ip_with', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('DPKO', 'DPKO'), ('ECA', 'ECA'), ('ECLAC', 'ECLAC'), ('ESCWA', 'ESCWA'), ('FAO', 'FAO'), ('ILO', 'ILO'), ('IOM', 'IOM'), ('OHCHR', 'OHCHR'), ('UN', 'UN'), ('UN Women', 'UN Women'), ('UNAIDS', 'UNAIDS'), ('UNDP', 'UNDP'), (
                    'UNESCO', 'UNESCO'), ('UNFPA', 'UNFPA'), ('UN - Habitat', 'UN - Habitat'), ('UNHCR', 'UNHCR'), ('UNODC', 'UNODC'), ('UNOPS', 'UNOPS'), ('UNRWA', 'UNRWA'), ('UNSC', 'UNSC'), ('UNU', 'UNU'), ('WB', 'WB'), ('WFP', 'WFP'), ('WHO', 'WHO')], max_length=20), blank=True, default=[], size=None, verbose_name='Shared IP with')),
                ('cancel_comment', models.TextField(blank=True, verbose_name='Cancel Comment')),
            ],
            options={
                'ordering': ('id', ),
                'verbose_name': 'Engagement',
                'verbose_name_plural': 'Engagements',
            },
        ),
        migrations.CreateModel(
            name='EngagementActionPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Invoice and receive reimbursement of ineligible expenditure', 'Invoice and receive reimbursement of ineligible expenditure'), ('Change cash transfer modality (DCT, reimbursement or direct payment)', 'Change cash transfer modality (DCT, reimbursement or direct payment)'), ('IP to incur and report on additional expenditure', 'IP to incur and report on additional expenditure'), ('Review and amend ICE or budget', 'Review and amend ICE or budget'), ('IP to correct FACE form or Statement of Expenditure', 'IP to correct FACE form or Statement of Expenditure'), ('Schedule a programmatic visit', 'Schedule a programmatic visit'), (
                    'Schedule a follow-up spot check', 'Schedule a follow-up spot check'), ('Schedule an audit', 'Schedule an audit'), ('Block future cash transfers', 'Block future cash transfers'), ('Block or mark vendor for deletion', 'Block or mark vendor for deletion'), ('Escalate to Chief of Operations, Dep Rep, or Rep', 'Escalate to Chief of Operations, Dep Rep, or Rep'), ('Escalate to Investigation', 'Escalate to Investigation'), ('Capacity building / Discussion with partner', 'Capacity building / Discussion with partner'), ('Change IP risk rating', 'Change IP risk rating'), ('Other', 'Other')], max_length=100, verbose_name='Category')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('due_date', models.DateField(verbose_name='Due Date')),
                ('action_taken', models.TextField(blank=True, verbose_name='Action Taken')),
                ('status', models.CharField(choices=[('open', 'Open'), ('closed',
                                                                        'Closed')], default='open', max_length=10, verbose_name='Status')),
                ('high_priority', models.BooleanField(default=False, verbose_name='High Priority')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                             related_name='created_engagement_action_points', to=settings.AUTH_USER_MODEL, verbose_name='Author')),
            ],
        ),
        migrations.CreateModel(
            name='FinancialFinding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(choices=[('no-supporting-documentation', 'No supporting documentation'), ('insufficient-supporting-documentation', 'Insufficient supporting documentation'), ('cut-off-error', 'Cut-off error'), ('expenditure-not-for-project-purposes', 'Expenditure not for project purposes'), ('no-proof-of-payment', 'No proof of payment'), ('no-proof-of-goods-services-received', 'No proof of goods / services received'), ('vat-incorrectly-claimed', 'VAT incorrectly claimed'), ('dsa-rates-exceeded', 'DSA rates exceeded'), ('unreasonable-price', 'Unreasonable price'),
                                                    ('bank-interest-not-reported', 'Bank interest not reported'), ('support-costs-incorrectly-calculated', 'Support costs incorrectly calculated'), ('expenditure-claimed-but-activities-not-undertaken', 'Expenditure claimed but activities not undertaken'), ('advance-claimed-as-expenditure', 'Advance claimed as expenditure'), ('commitments-treated-as-expenditure', 'Commitments treated as expenditure'), ('ineligible-salary-costs', 'Ineligible salary costs'), ('ineligible-costs-other', 'Ineligible costs (other)')], max_length=255, verbose_name='Title (Category)')),
                ('local_amount', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Amount (local)')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20, verbose_name='Amount (USD)')),
                ('description', models.TextField(verbose_name='Description')),
                ('recommendation', models.TextField(blank=True, verbose_name='Recommendation')),
                ('ip_comments', models.TextField(blank=True, verbose_name='IP Comments')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Finding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('priority', models.CharField(choices=[('high', 'High'),
                                                       ('low', 'Low')], max_length=4, verbose_name='Priority')),
                ('category_of_observation', models.CharField(choices=[('expenditure_not_for_programme_purposes', 'Expenditure not for programme purposes'), ('expenditure_claimed_but_activities_not_undertaken', 'Expenditure claimed but activities not undertaken'), ('expenditure_exceeds_the_approved_budget_rate_or_amount', 'Expenditure exceeds the approved budget rate or amount'), ('expenditure_not_recorded_in_the_correct_period_or_face_form', 'Expenditure not recorded in the correct period or FACE form'), ('advance_claimed_as_expenditure', 'Advance claimed as expenditure'), ('commitments_treated_as_expenditure', 'Commitments treated as expenditure'), ('signatories_on_face_forms_different_from_ip_agreement', 'Signatories on FACE forms different from those in the IP Agreement'), ('no_supporting_documentation', 'No supporting documentation'), ('insufficient_supporting_documentation', 'Insufficient supporting documentation'), ('no_proof_of_payment', 'No proof of payment'), ('no_proof_of_goods_received', 'No proof of goods / services received'), ('poor_record_keeping', 'Poor record keeping'), ('lack_of_audit_trail', 'Lack of audit trail (FACE forms do not reconcile with IPs and UNICEF\u2019s accounting records)'), ('lack_of_bank_reconciliations', 'Lack of bank reconciliations'), (
                    'lack_of_segregation_of_duties', 'Lack of segregation of duties'), ('vat_incorrectly_claimed', 'VAT incorrectly claimed'), ('ineligible_salary_cost', 'Ineligible salary cost'), ('dsa_rates_exceeded', 'DSA rates exceeded'), ('support_costs_incorrectly_calculated', 'Support costs incorrectly calculated'), ('no_competitive_procedures_for_the_award_of_contracts', 'No competitive procedures for the award of contracts'), ('supplier\u2019s_invoices_not_approved', 'Supplier\u2019s invoices not approved'), ('no_evaluation_of_goods_received', 'No evaluation of goods received'), ('lack_of_procedures_for_verification_of_assets', 'Lack of procedures for verification of assets'), ('goods_/_assets_not_used_for_the_intended_purposes', 'Goods / Assets not used for the intended purposes'), ('lack_of_written_agreement_between_ip_and_sub-contractee', 'Lack of written agreement between IP and sub-contractee'), ('lack_of_sub-contractee_financial', 'Lack of sub-contractee financial / substantive progress reporting on file'), ('failure_to_implement_prior_assurance_activity_recommendations', 'Failure to implement prior assurance activity recommendations'), ('other', 'Other')], max_length=100, verbose_name='Category of Observation')),
                ('recommendation', models.TextField(blank=True, verbose_name='Recommendation')),
                ('agreed_action_by_ip', models.TextField(blank=True, verbose_name='Agreed Action by IP')),
                ('deadline_of_action', models.DateField(blank=True, null=True, verbose_name='Deadline of Action')),
            ],
        ),
        migrations.CreateModel(
            name='KeyInternalControl',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recommendation', models.TextField(blank=True, verbose_name='Recommendation')),
                ('audit_observation', models.TextField(blank=True, verbose_name='Audit Observation')),
                ('ip_response', models.TextField(blank=True, verbose_name='IP response')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Risk',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.SmallIntegerField(blank=True, choices=[
                 (0, 'N/A'), (1, 'Low'), (2, 'Medium'), (3, 'Significant'), (4, 'High')], null=True, verbose_name='Value')),
                ('extra', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True, verbose_name='Extra')),
            ],
        ),
        migrations.CreateModel(
            name='RiskBluePrint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False)),
                ('weight', models.PositiveSmallIntegerField(default=1, verbose_name='Weight')),
                ('is_key', models.BooleanField(default=False, verbose_name='Is Key')),
                ('header', models.TextField(verbose_name='Header')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='RiskCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False)),
                ('header', models.CharField(max_length=255, verbose_name='Header')),
                ('category_type', models.CharField(choices=[
                 ('default', 'Default'), ('primary', 'Primary')], default='default', max_length=20, verbose_name='Category Type')),
                ('code', models.CharField(blank=True, max_length=20, verbose_name='Code')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                             related_name='children', to='audit.RiskCategory', verbose_name='Parent')),
            ],
            options={
                'verbose_name_plural': 'Risk Categories',
            },
        ),
        migrations.CreateModel(
            name='SpecialAuditRecommendation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SpecificProcedure',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('finding', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Audit',
            fields=[
                ('engagement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE,
                                                        parent_link=True, primary_key=True, serialize=False, to='audit.Engagement')),
                ('audited_expenditure', models.DecimalField(blank=True, decimal_places=2,
                                                            max_digits=20, null=True, verbose_name='Audited Expenditure $')),
                ('financial_findings', models.DecimalField(blank=True, decimal_places=2,
                                                           max_digits=20, null=True, verbose_name='Financial Findings $')),
                ('audit_opinion', models.CharField(blank=True, choices=[('unqualified', 'Unqualified'), ('qualified', 'Qualified'), (
                    'disclaimer_opinion', 'Disclaimer opinion'), ('adverse_opinion', 'Adverse opinion')], max_length=20, null=True, verbose_name='Audit Opinion')),
            ],
            options={
                'ordering': ('id',),
                'verbose_name': 'Audit',
                'verbose_name_plural': 'Audits',
            },
            bases=('audit.engagement',),
        ),
        migrations.CreateModel(
            name='MicroAssessment',
            fields=[
                ('engagement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE,
                                                        parent_link=True, primary_key=True, serialize=False, to='audit.Engagement')),
            ],
            options={
                'ordering': ('id',),
                'verbose_name': 'Micro Assessment',
                'verbose_name_plural': 'Micro Assessments',
            },
            bases=('audit.engagement',),
        ),
        migrations.CreateModel(
            name='SpecialAudit',
            fields=[
                ('engagement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE,
                                                        parent_link=True, primary_key=True, serialize=False, to='audit.Engagement')),
            ],
            options={
                'ordering': ('id',),
                'abstract': False,
                'verbose_name': 'Special Audit',
                'verbose_name_plural': 'Special Audits',
            },
            bases=('audit.engagement',),
        ),
        migrations.CreateModel(
            name='SpotCheck',
            fields=[
                ('engagement_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE,
                                                        parent_link=True, primary_key=True, serialize=False, to='audit.Engagement')),
                ('total_amount_tested', models.DecimalField(blank=True, decimal_places=2,
                                                            max_digits=20, null=True, verbose_name='Total Amount Tested')),
                ('total_amount_of_ineligible_expenditure', models.DecimalField(blank=True, decimal_places=2,
                                                                               max_digits=20, null=True, verbose_name='Total Amount of Ineligible Expenditure')),
                ('internal_controls', models.TextField(blank=True, verbose_name='Internal Controls')),
            ],
            options={
                'ordering': ('id',),
                'verbose_name': 'Spot Check',
                'verbose_name_plural': 'Spot Checks',
            },
            bases=('audit.engagement',),
        ),
        migrations.AddField(
            model_name='riskblueprint',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                    related_name='blueprints', to='audit.RiskCategory', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='risk',
            name='blueprint',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                    related_name='risks', to='audit.RiskBluePrint', verbose_name='Blueprint'),
        ),
        migrations.AddField(
            model_name='risk',
            name='engagement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                    related_name='risks', to='audit.Engagement', verbose_name='Engagement'),
        ),
        migrations.AddField(
            model_name='engagementactionpoint',
            name='engagement',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                    related_name='action_points', to='audit.Engagement', verbose_name='Engagement'),
        ),
        migrations.AddField(
            model_name='engagementactionpoint',
            name='person_responsible',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='engagement_action_points',
                                    to=settings.AUTH_USER_MODEL, verbose_name='Person Responsible'),
        ),
    ]
