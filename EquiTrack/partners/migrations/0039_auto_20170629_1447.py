# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2017-06-29 14:47
from __future__ import unicode_literals

import django.contrib.postgres.fields
from django.db import migrations, models, connection

TYPE_MAP = {
        'CPR': 'Change in Programme Result',
        'CPF': 'Change in Population Focus',
        'CGC': 'Change in Georgraphical Coverage',
        'CTBGT20': 'Change in Total Budget >20%',
        'CTBLT20': 'Change in Total Budget <=20%',
        'CABLT20': 'Changes in Activity Budget <=20% - No Change in Total Budget',
        'CABGT20': 'Changes in Activity Budget >20% - No Change in Total Budget - Prior approval in authorized FACE',
        'CABGT20FACE': 'Changes in Activity Budget >20% - No Change in Total Budget - Reporting at FACE',
}

MAP = {
    'default_schema': {
        'CPR': 'result',
        'CPF': 'other',
        'CGC': 'other',
        'CTBGT20': 'budget',
        'CTBLT20': 'budget',
        'CABLT20': 'budget',
        'CABGT20': 'budget',
        'CABGT20FACE': 'budget'
    },
}

def reverse(apps, schema_editor):
    raise BaseException('Cannot migrate this backwards')

def default_list_to_other():
    return ['other']

def get_mapped_value(value):
    schema_name = connection.schema_name
    try:
        schema_map = MAP[schema_name]
    except KeyError:
        schema_map = MAP['default_schema']

    return schema_map[value]

def migrate_amendment_types(apps, schema_editor):
    InterventionAmendment = apps.get_model('partners', 'InterventionAmendment')
    no = 0
    for i in InterventionAmendment.objects.all():
        no += 1
        value = get_mapped_value(i.type)
        i.types = [i.type]
        if value == 'other':
            i.other_description = TYPE_MAP[i.type]
        i.save()

    print('Updated Intervention Amendments: {}'.format(no))


class Migration(migrations.Migration):

    dependencies = [
        ('partners', '0038_auto_20170628_1808'),
    ]

    operations = [
        migrations.AddField(
            model_name='interventionamendment',
            name='types',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(
                choices=[('dates', 'Dates'), ('results', 'Results'), ('budget', 'Budget'), ('other', 'Other')],
                max_length=50), null=True, size=None),
        ),
        migrations.AddField(
            model_name='interventionamendment',
            name='other_description',
            field=models.CharField(max_length=512, null=True, blank=True)
        ),
        migrations.RunPython(
            migrate_amendment_types, reverse_code=reverse),

        migrations.AlterField(
            model_name='interventionamendment',
            name='types',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.CharField(
                choices=[('dates', 'Dates'), ('results', 'Results'), ('budget', 'Budget'), ('other', 'Other')],
                max_length=50), size=None),
        ),
        migrations.RemoveField(
            model_name='interventionamendment',
            name='type'
        ),
    ]
