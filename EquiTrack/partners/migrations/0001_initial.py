# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2016-11-09 22:20
from __future__ import unicode_literals

import EquiTrack.mixins
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_hstore.fields
import model_utils.fields
import partners.models
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '__first__'),
        ('reports', '__first__'),
        ('locations', '__first__'),
        ('supplies', '0001_initial'),
        ('funds', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agreement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('agreement_type', models.CharField(choices=[('PCA', 'Programme Cooperation Agreement'), ('SSFA', 'Small Scale Funding Agreement'), ('MOU', 'Memorandum of Understanding'), ('IC', 'Institutional Contract'), ('AWP', 'Work Plan')], max_length=10)),
                ('agreement_number', models.CharField(blank=True, max_length=45L, verbose_name='Reference Number')),
                ('attached_agreement', models.FileField(blank=True, upload_to=partners.models.get_agreement_path)),
                ('start', models.DateField(blank=True, null=True)),
                ('end', models.DateField(blank=True, null=True)),
                ('signed_by_unicef_date', models.DateField(blank=True, null=True)),
                ('signed_by_partner_date', models.DateField(blank=True, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_address', models.CharField(blank=True, max_length=256L)),
                ('account_title', models.CharField(blank=True, max_length=255, null=True)),
                ('account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('routing_details', models.CharField(blank=True, help_text=b'Routing Details, including SWIFT/IBAN (if applicable)', max_length=255, null=True)),
                ('bank_contact_person', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AgreementAmendmentLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('type', models.CharField(choices=[(b'Authorised Officers', b'Authorised Officers'), (b'Banking Info', b'Banking Info'), (b'Agreement Changes', b'Agreement Changes'), (b'Additional Clauses', b'Additional Clauses')], max_length=50)),
                ('amended_at', models.DateField(null=True, verbose_name=b'Signed At')),
                ('status', models.CharField(blank=True, choices=[('in_process', 'In Process'), ('active', 'Active'), ('implemented', 'Implemented'), ('cancelled', 'Cancelled')], max_length=32L)),
                ('agreement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amendments_log', to='partners.Agreement')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AmendmentLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('type', models.CharField(choices=[(b'No Cost', b'No Cost'), (b'Cost', b'Cost'), (b'Activity', b'Activity'), (b'Other', b'Other')], max_length=50)),
                ('amended_at', models.DateField(null=True, verbose_name=b'Signed At')),
                ('status', models.CharField(blank=True, choices=[('in_process', 'In Process'), ('active', 'Active'), ('implemented', 'Implemented'), ('cancelled', 'Cancelled')], max_length=32L)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('Micro Assessment', 'Micro Assessment'), ('Simplified Checklist', 'Simplified Checklist'), ('Scheduled Audit report', 'Scheduled Audit report'), ('Special Audit report', 'Special Audit report'), ('High Risk Assumed', 'High Risk Assumed'), ('Other', 'Other')], max_length=50)),
                ('names_of_other_agencies', models.CharField(blank=True, help_text='List the names of the other agencies they have worked with', max_length=255, null=True)),
                ('expected_budget', models.IntegerField(blank=True, null=True, verbose_name='Planned amount')),
                ('notes', models.CharField(blank=True, help_text='Note any special requests to be considered during the assessment', max_length=255, null=True, verbose_name='Special requests')),
                ('requested_date', models.DateField(auto_now_add=True)),
                ('planned_date', models.DateField(blank=True, null=True)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('rating', models.CharField(choices=[('high', 'High'), ('significant', 'Significant'), ('medium', 'Medium'), ('low', 'Low')], default='high', max_length=50)),
                ('report', models.FileField(blank=True, null=True, upload_to=b'assessments')),
                ('current', models.BooleanField(default=False, verbose_name='Basis for risk rating')),
                ('approving_officer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AuthorizedOfficer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('agreement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorized_officers', to='partners.Agreement')),
                ('amendment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='partners.AgreementAmendmentLog')),
            ],
        ),
        migrations.CreateModel(
            name='BankDetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank_name', models.CharField(blank=True, max_length=255, null=True)),
                ('bank_address', models.CharField(blank=True, max_length=256L)),
                ('account_title', models.CharField(blank=True, max_length=255, null=True)),
                ('account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('routing_details', models.CharField(blank=True, help_text=b'Routing Details, including SWIFT/IBAN (if applicable)', max_length=255, null=True)),
                ('bank_contact_person', models.CharField(blank=True, max_length=255, null=True)),
                ('agreement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bank_details', to='partners.Agreement')),
                ('amendment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='partners.AgreementAmendmentLog')),
            ],
        ),
        migrations.CreateModel(
            name='DirectCashTransfer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fc_ref', models.CharField(max_length=50)),
                ('amount_usd', models.DecimalField(decimal_places=2, max_digits=10)),
                ('liquidation_usd', models.DecimalField(decimal_places=2, max_digits=10)),
                ('outstanding_balance_usd', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_less_than_3_Months_usd', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_3_to_6_months_usd', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_6_to_9_months_usd', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_more_than_9_Months_usd', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='DistributionPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(help_text='Quantity required for this location')),
                ('send', models.BooleanField(default=False, verbose_name='Send to partner?')),
                ('sent', models.BooleanField(default=False)),
                ('document', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('delivered', models.IntegerField(default=0)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplies.SupplyItem')),
            ],
        ),
        migrations.CreateModel(
            name='FileType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64L, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FundingCommitment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='start')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='end')),
                ('fr_number', models.CharField(max_length=50)),
                ('wbs', models.CharField(max_length=50)),
                ('fc_type', models.CharField(max_length=50)),
                ('fc_ref', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('fr_item_amount_usd', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('agreement_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('commitment_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('expenditure_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('grant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='funds.Grant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GovernmentIntervention',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.CharField(blank=True, max_length=45L, verbose_name=b'Reference Number')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='GovernmentInterventionResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.CharField(max_length=4)),
                ('planned_amount', models.IntegerField(default=0, verbose_name=b'Planned Cash Transfers')),
                ('activities', django_hstore.fields.DictionaryField(blank=True, null=True)),
                ('planned_visits', models.IntegerField(default=0)),
                ('activities_list', models.ManyToManyField(blank=True, related_name='activities_list', to='reports.Result')),
                ('intervention', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='partners.GovernmentIntervention')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reports.Result')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Section')),
                ('sector', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reports.Sector', verbose_name=b'Programme/Sector')),
                ('unicef_managers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name=b'Unicef focal points')),
            ],
        ),
        migrations.CreateModel(
            name='GwPCALocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tpm_visit', models.BooleanField(default=False)),
                ('governorate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Governorate')),
                ('locality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Locality')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Location')),
            ],
            options={
                'verbose_name': 'Partnership Location',
            },
        ),
        migrations.CreateModel(
            name='IndicatorDueDates',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('due_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-due_date'],
                'verbose_name': 'Report Due Date',
                'verbose_name_plural': 'Report Due Dates',
            },
        ),
        migrations.CreateModel(
            name='IndicatorReport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='start')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='end')),
                ('total', models.PositiveIntegerField()),
                ('disaggregated', models.BooleanField(default=False)),
                ('disaggregation', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('report_status', models.CharField(choices=[(b'ontrack', 'On Track'), (b'constrained', 'Constrained'), (b'noprogress', 'No Progress'), (b'targetmet', 'Target Met')], default=b'ontrack', max_length=15)),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='reports.Indicator')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartnerOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partner_type', models.CharField(choices=[('Bilateral / Multilateral', 'Bilateral / Multilateral'), ('Civil Society Organization', 'Civil Society Organization'), ('Government', 'Government'), ('UN Agency', 'UN Agency')], max_length=50)),
                ('cso_type', models.CharField(blank=True, choices=[('International', 'International'), ('National', 'National'), ('Community Based Organisation', 'Community Based Organisation'), ('Academic Institution', 'Academic Institution')], max_length=50, null=True, verbose_name='CSO Type')),
                ('name', models.CharField(help_text='Please make sure this matches the name you enter in VISION', max_length=255, verbose_name=b'Full Name')),
                ('short_name', models.CharField(blank=True, max_length=50)),
                ('description', models.CharField(blank=True, max_length=256L)),
                ('shared_partner', models.CharField(choices=[('No', 'No'), ('with UNDP', 'with UNDP'), ('with UNFPA', 'with UNFPA'), ('with UNDP & UNFPA', 'with UNDP & UNFPA')], default='No', help_text='Partner shared with UNDP or UNFPA?', max_length=50)),
                ('address', models.TextField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=32L, null=True)),
                ('vendor_number', models.CharField(blank=True, max_length=30, null=True, unique=True)),
                ('alternate_id', models.IntegerField(blank=True, null=True)),
                ('alternate_name', models.CharField(blank=True, max_length=255, null=True)),
                ('rating', models.CharField(max_length=50, null=True, verbose_name='Risk Rating')),
                ('type_of_assessment', models.CharField(max_length=50, null=True)),
                ('last_assessment_date', models.DateField(blank=True, null=True)),
                ('core_values_assessment_date', models.DateField(blank=True, null=True, verbose_name='Date positively assessed against core values')),
                ('core_values_assessment', models.FileField(blank=True, help_text='Only required for CSO partners', null=True, upload_to=b'partners/core_values/')),
                ('vision_synced', models.BooleanField(default=False)),
                ('hidden', models.BooleanField(default=False)),
                ('deleted_flag', models.BooleanField(default=False, verbose_name='Marked for deletion')),
                ('total_ct_cp', models.DecimalField(blank=True, decimal_places=2, help_text=b'Total Cash Transferred for Country Programme', max_digits=12, null=True)),
                ('total_ct_cy', models.DecimalField(blank=True, decimal_places=2, help_text=b'Total Cash Transferred per Current Year', max_digits=12, null=True)),
                ('hact_values', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default={}, null=True)),
            ],
            options={
                'ordering': ['name'],
            },
            bases=(EquiTrack.mixins.AdminURLMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PartnershipBudget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('partner_contribution', models.IntegerField(default=0)),
                ('unicef_cash', models.IntegerField(default=0)),
                ('in_kind_amount', models.IntegerField(default=0, verbose_name=b'UNICEF Supplies')),
                ('year', models.CharField(blank=True, max_length=5, null=True)),
                ('total', models.IntegerField(default=0)),
                ('amendment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='budgets', to='partners.AmendmentLog')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PartnerStaffMember',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=64L)),
                ('first_name', models.CharField(max_length=64L)),
                ('last_name', models.CharField(max_length=64L)),
                ('email', models.CharField(max_length=128L, unique=True)),
                ('phone', models.CharField(blank=True, max_length=64L)),
                ('active', models.BooleanField(default=True)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.PartnerOrganization')),
            ],
        ),
        migrations.CreateModel(
            name='PCA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('partnership_type', models.CharField(blank=True, choices=[('PD', 'Programme Document'), ('SHPD', 'Simplified Humanitarian Programme Document'), ('AWP', 'Cash Transfers to Government'), ('SSFA', 'SSFA TOR'), ('IC', 'IC TOR')], default='PD', max_length=255, null=True, verbose_name='Document type')),
                ('number', models.CharField(blank=True, max_length=45L, null=True, verbose_name='Reference Number')),
                ('title', models.CharField(max_length=256L)),
                ('project_type', models.CharField(blank=True, choices=[('Bulk Procurement', 'Bulk Procurement'), ('Construction Project', 'Construction Project')], max_length=20, null=True)),
                ('status', models.CharField(blank=True, choices=[('in_process', 'In Process'), ('active', 'Active'), ('implemented', 'Implemented'), ('cancelled', 'Cancelled')], default='in_process', help_text='In Process = In discussion with partner, Active = Currently ongoing, Implemented = completed, Cancelled = cancelled or not approved', max_length=32)),
                ('start_date', models.DateField(blank=True, help_text='The date the Intervention will start', null=True)),
                ('end_date', models.DateField(blank=True, help_text='The date the Intervention will end', null=True)),
                ('initiation_date', models.DateField(help_text='The date the partner submitted complete partnership documents to Unicef', verbose_name='Submission Date')),
                ('submission_date', models.DateField(blank=True, help_text='The date the documents were submitted to the PRC', null=True, verbose_name='Submission Date to PRC')),
                ('review_date', models.DateField(blank=True, help_text='The date the PRC reviewed the partnership', null=True, verbose_name='Review date by PRC')),
                ('signed_by_unicef_date', models.DateField(blank=True, null=True)),
                ('signed_by_partner_date', models.DateField(blank=True, null=True)),
                ('fr_number', models.CharField(blank=True, max_length=50, null=True)),
                ('planned_visits', models.IntegerField(default=0)),
                ('sectors', models.CharField(blank=True, max_length=255, null=True)),
                ('current', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('agreement', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field=b'partner', chained_model_field=b'partner', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='interventions', to='partners.Agreement')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='partners.PartnerOrganization')),
                ('partner_focal_point', smart_selects.db_fields.ChainedForeignKey(blank=True, chained_field=b'partner', chained_model_field=b'partner', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='my_partnerships', to='partners.PartnerStaffMember')),
                ('partner_manager', smart_selects.db_fields.ChainedForeignKey(blank=True, chained_field=b'partner', chained_model_field=b'partner', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='signed_partnerships', to='partners.PartnerStaffMember', verbose_name='Signed by partner')),
                ('result_structure', models.ForeignKey(blank=True, help_text='Which result structure does this partnership report under?', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='reports.ResultStructure')),
                ('unicef_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_partnerships', to=settings.AUTH_USER_MODEL, verbose_name='Signed by')),
                ('unicef_managers', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name=b'Unicef focal points')),
            ],
            options={
                'ordering': ['-created_at'],
                'verbose_name': 'Intervention',
                'verbose_name_plural': 'Interventions',
            },
            bases=(EquiTrack.mixins.AdminURLMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PCAFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment', models.FileField(max_length=255, upload_to=partners.models.get_file_path)),
                ('pca', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='partners.PCA')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.FileType')),
            ],
        ),
        migrations.CreateModel(
            name='PCAGrant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('funds', models.IntegerField(blank=True, null=True)),
                ('amendment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='grants', to='partners.AmendmentLog')),
                ('grant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='funds.Grant')),
                ('partnership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.PCA')),
            ],
            options={
                'ordering': ['-funds'],
            },
        ),
        migrations.CreateModel(
            name='PCASector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('amendment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sectors', to='partners.AmendmentLog')),
                ('pca', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.PCA')),
                ('sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reports.Sector')),
            ],
            options={
                'verbose_name': 'PCA Sector',
            },
        ),
        migrations.CreateModel(
            name='PCASectorGoal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reports.Goal')),
                ('pca_sector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.PCASector')),
            ],
            options={
                'verbose_name': 'CCC',
                'verbose_name_plural': 'CCCs',
            },
        ),
        migrations.CreateModel(
            name='RAMIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field=b'result', chained_model_field=b'result', null=True, on_delete=django.db.models.deletion.CASCADE, to='reports.Indicator')),
                ('intervention', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicators', to='partners.PCA')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reports.Result')),
            ],
        ),
        migrations.CreateModel(
            name='ResultChain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('target', models.PositiveIntegerField(blank=True, null=True)),
                ('current_progress', models.PositiveIntegerField(default=0)),
                ('partner_contribution', models.IntegerField(default=0)),
                ('unicef_cash', models.IntegerField(default=0)),
                ('in_kind_amount', models.IntegerField(default=0)),
                ('disaggregation', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('indicator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reports.Indicator')),
                ('partnership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='results', to='partners.PCA')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reports.Result')),
                ('result_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reports.ResultType')),
            ],
        ),
        migrations.CreateModel(
            name='SupplyPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(help_text='Total quantity needed for this intervention')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='supplies.SupplyItem')),
                ('partnership', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supply_plans', to='partners.PCA')),
            ],
        ),
        migrations.AddField(
            model_name='partnershipbudget',
            name='partnership',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budget_log', to='partners.PCA'),
        ),
        migrations.AlterUniqueTogether(
            name='partnerorganization',
            unique_together=set([('name', 'vendor_number')]),
        ),
        migrations.AddField(
            model_name='indicatorreport',
            name='partner_staff_member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicator_reports', to='partners.PartnerStaffMember'),
        ),
        migrations.AddField(
            model_name='indicatorreport',
            name='result_chain',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='indicator_reports', to='partners.ResultChain'),
        ),
        migrations.AddField(
            model_name='indicatorduedates',
            name='intervention',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='indicator_due_dates', to='partners.PCA'),
        ),
        migrations.AddField(
            model_name='gwpcalocation',
            name='pca',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='partners.PCA'),
        ),
        migrations.AddField(
            model_name='gwpcalocation',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Region'),
        ),
        migrations.AddField(
            model_name='gwpcalocation',
            name='sector',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reports.Sector'),
        ),
        migrations.AddField(
            model_name='governmentintervention',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='work_plans', to='partners.PartnerOrganization'),
        ),
        migrations.AddField(
            model_name='governmentintervention',
            name='result_structure',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='reports.ResultStructure'),
        ),
        migrations.AddField(
            model_name='distributionplan',
            name='partnership',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='distribution_plans', to='partners.PCA'),
        ),
        migrations.AddField(
            model_name='distributionplan',
            name='site',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Location'),
        ),
        migrations.AddField(
            model_name='authorizedofficer',
            name='officer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.PartnerStaffMember'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments', to='partners.PartnerOrganization'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='requesting_officer',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requested_assessments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='amendmentlog',
            name='partnership',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amendments_log', to='partners.PCA'),
        ),
        migrations.AddField(
            model_name='agreement',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.PartnerOrganization'),
        ),
        migrations.AddField(
            model_name='agreement',
            name='partner_manager',
            field=smart_selects.db_fields.ChainedForeignKey(blank=True, chained_field=b'partner', chained_model_field=b'partner', null=True, on_delete=django.db.models.deletion.CASCADE, to='partners.PartnerStaffMember', verbose_name='Signed by partner'),
        ),
        migrations.AddField(
            model_name='agreement',
            name='signed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='signed_pcas', to=settings.AUTH_USER_MODEL),
        ),
    ]
