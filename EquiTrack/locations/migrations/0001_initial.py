# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2016-11-09 22:21
from __future__ import unicode_literals

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import locations.models
import mptt.fields
import paintstore.fields
import smart_selects.db_fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CartoDBTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=254)),
                ('api_key', models.CharField(max_length=254)),
                ('table_name', models.CharField(max_length=254)),
                ('display_name', models.CharField(blank=True, max_length=254, null=True)),
                ('name_col', models.CharField(default=b'name', max_length=254)),
                ('pcode_col', models.CharField(default=b'pcode', max_length=254)),
                ('parent_code_col', models.CharField(blank=True, max_length=254, null=True)),
                ('color', paintstore.fields.ColorPickerField(blank=True, default=locations.models.get_random_color, max_length=7, null=True)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('_default_manager', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='GatewayType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64L, unique=True)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Location Type',
            },
        ),
        migrations.CreateModel(
            name='Governorate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45L)),
                ('p_code', models.CharField(blank=True, max_length=32L, null=True)),
                ('color', paintstore.fields.ColorPickerField(blank=True, default=locations.models.get_random_color, max_length=7, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('gateway', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.GatewayType', verbose_name=b'Admin type')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='LinkedLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
                ('governorate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.Governorate')),
            ],
        ),
        migrations.CreateModel(
            name='Locality',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cad_code', models.CharField(max_length=11L)),
                ('cas_code', models.CharField(max_length=11L)),
                ('cas_code_un', models.CharField(max_length=11L)),
                ('name', models.CharField(max_length=128L)),
                ('cas_village_name', models.CharField(max_length=128L)),
                ('p_code', models.CharField(blank=True, max_length=32L, null=True)),
                ('color', paintstore.fields.ColorPickerField(blank=True, default=locations.models.get_random_color, max_length=7, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('gateway', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.GatewayType', verbose_name=b'Admin type')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Sub-district',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=254L)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('p_code', models.CharField(blank=True, max_length=32L, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('point', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('lft', models.PositiveIntegerField(db_index=True, editable=False)),
                ('rght', models.PositiveIntegerField(db_index=True, editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('level', models.PositiveIntegerField(db_index=True, editable=False)),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.GatewayType', verbose_name=b'Location Type')),
                ('locality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Locality')),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='locations.Location')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=45L)),
                ('p_code', models.CharField(blank=True, max_length=32L, null=True)),
                ('color', paintstore.fields.ColorPickerField(blank=True, default=locations.models.get_random_color, max_length=7, null=True)),
                ('geom', django.contrib.gis.db.models.fields.MultiPolygonField(blank=True, null=True, srid=4326)),
                ('gateway', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.GatewayType', verbose_name=b'Admin type')),
                ('governorate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.Governorate')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'District',
            },
        ),
        migrations.AddField(
            model_name='locality',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.Region'),
        ),
        migrations.AddField(
            model_name='linkedlocation',
            name='locality',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field=b'region', chained_model_field=b'region', null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Locality'),
        ),
        migrations.AddField(
            model_name='linkedlocation',
            name='location',
            field=smart_selects.db_fields.ChainedForeignKey(blank=True, chained_field=b'locality', chained_model_field=b'locality', null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Location'),
        ),
        migrations.AddField(
            model_name='linkedlocation',
            name='region',
            field=smart_selects.db_fields.ChainedForeignKey(auto_choose=True, chained_field=b'governorate', chained_model_field=b'governorate', on_delete=django.db.models.deletion.CASCADE, to='locations.Region'),
        ),
        migrations.AddField(
            model_name='cartodbtable',
            name='location_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='locations.GatewayType'),
        ),
        migrations.AddField(
            model_name='cartodbtable',
            name='parent',
            field=mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='locations.CartoDBTable'),
        ),
        migrations.AlterUniqueTogether(
            name='location',
            unique_together=set([('name', 'gateway', 'p_code')]),
        ),
    ]
