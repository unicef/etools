# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2017-12-06 11:03
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


def migrate_agreement(apps, schema_editor):
    Engagement = apps.get_model('audit', 'Engagement')
    TargetPurchaseOrder = apps.get_model('purchase_order', 'PurchaseOrder')

    purchase_order_cache = dict()
    for engagement in Engagement.objects.select_related('agreement'):

        purchase_order = purchase_order_cache.get(engagement.agreement.order_number, None)
        if purchase_order is None:
            purchase_order = TargetPurchaseOrder.objects.get(order_number=engagement.agreement.order_number)
            purchase_order_cache[purchase_order.order_number] = purchase_order

        engagement.agreement1 = purchase_order
        engagement.save()


def migrate_staff_members(apps, schema_editor):
    Engagement = apps.get_model('audit', 'Engagement')
    TargetAuditorStaffMember = apps.get_model('purchase_order', 'AuditorStaffMember')

    staff_member_cache = dict()
    for engagement in Engagement.objects.prefetch_related('staff_members', 'staff_members__user'):

        staff_members = []
        for staff_member in engagement.staff_members.all():

            new_staff_member = staff_member_cache.get(staff_member.user.email, None)
            if new_staff_member is None:
                new_staff_member = TargetAuditorStaffMember.objects.get(user__email=staff_member.user.email)
                staff_member_cache[new_staff_member.user.email] = new_staff_member

            staff_members.append(new_staff_member)

        engagement.staff_members1 = staff_members


def migrate_po_item(apps, schema_editor):
    Engagement = apps.get_model('audit', 'Engagement')
    TargetPOItem = apps.get_model('purchase_order', 'PurchaseOrderItem')

    po_item_cache = dict()
    for engagement in Engagement.objects.select_related('po_item', 'po_item__purchase_order'):
        if not engagement.po_item:
            continue

        key = {
            'purchase_order__order_number': engagement.po_item.purchase_order.order_number,
            'number': engagement.po_item.number,
        }
        po_item = po_item_cache.get(tuple(key.values()), None)
        if po_item is None:
            po_item = TargetPOItem.objects.get(**key)
            po_item_cache[tuple(key.values())] = po_item

        engagement.po_item1 = po_item
        engagement.save()


class Migration(migrations.Migration):

    dependencies = [
        ('audit', '0021_auto_20171206_1103'),
    ]

    operations = [
        migrations.RunPython(
            migrate_agreement,
        ),
        migrations.RunPython(
            migrate_staff_members,
        ),
        migrations.RunPython(
            migrate_po_item,
        ),
    ]
