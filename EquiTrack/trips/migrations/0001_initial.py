# -*- coding: utf-8 -*-
# Generated by Django 1.9.10 on 2016-11-09 22:22
from __future__ import unicode_literals

import EquiTrack.mixins
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import smart_selects.db_fields
import trips.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('funds', '0001_initial'),
        ('users', '__first__'),
        ('reports', '0001_initial'),
        ('locations', '0001_initial'),
        ('partners', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=254)),
                ('due_date', models.DateField()),
                ('actions_taken', models.TextField(blank=True, null=True)),
                ('completed_date', models.DateField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[(b'closed', b'Closed'), (b'ongoing', b'On-going'), (b'open', b'Open'), (b'cancelled', b'Cancelled')], max_length=254, null=True, verbose_name=b'Status')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('follow_up', models.BooleanField(default=False)),
                ('person_responsible', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='for_action', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FileAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('caption', models.TextField(blank=True, help_text=b'Description of the file to upload: optional', null=True, verbose_name=b'Caption / Description')),
                ('report', models.FileField(max_length=255, upload_to=trips.models.get_report_filename)),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
        ),
        migrations.CreateModel(
            name='LinkedGovernmentPartner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intervention', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field=b'partner', chained_model_field=b'partner', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trips', to='partners.GovernmentIntervention')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.PartnerOrganization')),
                ('result', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field=b'intervention', chained_model_field=b'intervention', null=True, on_delete=django.db.models.deletion.CASCADE, to='partners.GovernmentInterventionResult')),
            ],
        ),
        migrations.CreateModel(
            name='LinkedPartner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('intervention', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field=b'partner', chained_model_field=b'partner', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trips', to='partners.PCA')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.PartnerOrganization')),
                ('result', smart_selects.db_fields.ChainedForeignKey(auto_choose=True, blank=True, chained_field=b'intervention', chained_model_field=b'partnership', null=True, on_delete=django.db.models.deletion.CASCADE, to='partners.ResultChain')),
            ],
        ),
        migrations.CreateModel(
            name='TravelRoutes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('origin', models.CharField(max_length=254)),
                ('destination', models.CharField(max_length=254)),
                ('depart', models.DateTimeField()),
                ('arrive', models.DateTimeField()),
                ('remarks', models.CharField(blank=True, max_length=254, null=True)),
            ],
            options={
                'verbose_name': 'Travel Itinerary',
                'verbose_name_plural': 'Travel Itinerary',
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('planned', 'Planned'), ('submitted', 'Submitted'), ('approved', 'Approved'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='planned', max_length=32L)),
                ('cancelled_reason', models.CharField(blank=True, help_text=b'Please provide a reason if the mission is cancelled', max_length=254, null=True)),
                ('purpose_of_travel', models.CharField(max_length=254)),
                ('travel_type', models.CharField(choices=[('programme_monitoring', 'PROGRAMMATIC VISIT'), ('spot_check', 'SPOT CHECK'), ('advocacy', 'ADVOCACY'), ('technical_support', 'TECHNICAL SUPPORT'), ('meeting', 'MEETING'), ('staff_development', 'STAFF DEVELOPMENT'), ('staff_entitlement', 'STAFF ENTITLEMENT')], default='programme_monitoring', max_length=32L)),
                ('security_clearance_required', models.BooleanField(default=False, help_text=b'Do you need security clarance for this trip?')),
                ('international_travel', models.BooleanField(default=False, help_text=b'International travel will require approval from the representative')),
                ('from_date', models.DateField()),
                ('to_date', models.DateField()),
                ('main_observations', models.TextField(blank=True, null=True)),
                ('constraints', models.TextField(blank=True, null=True)),
                ('lessons_learned', models.TextField(blank=True, null=True)),
                ('opportunities', models.TextField(blank=True, null=True)),
                ('ta_required', models.BooleanField(default=False, help_text=b'Is a Travel Authorisation (TA) is required?', verbose_name=b'TA required?')),
                ('ta_drafted', models.BooleanField(default=False, help_text=b'Has the TA been drafted in vision if applicable?', verbose_name=b'TA drafted?')),
                ('ta_drafted_date', models.DateField(blank=True, null=True, verbose_name=b'TA drafted date')),
                ('ta_reference', models.CharField(blank=True, max_length=254, null=True, verbose_name=b'TA reference')),
                ('transport_booked', models.BooleanField(default=False)),
                ('security_granted', models.BooleanField(default=False)),
                ('approved_by_supervisor', models.BooleanField(default=False)),
                ('date_supervisor_approved', models.DateField(blank=True, null=True)),
                ('approved_by_budget_owner', models.BooleanField(default=False)),
                ('date_budget_owner_approved', models.DateField(blank=True, null=True)),
                ('approved_by_human_resources', models.NullBooleanField(choices=[(None, b'N/A'), (True, b'Yes'), (False, b'No')], default=None, help_text=b'HR must approve all trips relating to training and staff development', verbose_name=b'Certified by human resources')),
                ('date_human_resources_approved', models.DateField(blank=True, null=True)),
                ('representative_approval', models.NullBooleanField(choices=[(None, b'N/A'), (True, b'Yes'), (False, b'No')], default=None)),
                ('date_representative_approved', models.DateField(blank=True, null=True)),
                ('approved_date', models.DateField(blank=True, null=True)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('approved_email_sent', models.BooleanField(default=False)),
                ('submitted_email_sent', models.BooleanField(default=False)),
                ('ta_trip_took_place_as_planned', models.BooleanField(default=False, help_text=b'I certify that the travel took place exactly as per the attached Travel Authorization and that there were no changes to the itinerary', verbose_name=b'TA trip took place as attached')),
                ('ta_trip_repay_travel_allowance', models.BooleanField(default=False, help_text=b'I certify that I will repay any travel allowance to which I am not entitled')),
                ('ta_trip_final_claim', models.BooleanField(default=False, help_text=b'I authorize UNICEF to treat this as the FINAL Claim')),
                ('pending_ta_amendment', models.BooleanField(default=False)),
                ('budget_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='budgeted_trips', to=settings.AUTH_USER_MODEL)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='trips_driver', to=settings.AUTH_USER_MODEL, verbose_name=b'Driver')),
                ('driver_supervisor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='driver_supervised_trips', to=settings.AUTH_USER_MODEL, verbose_name=b'Supervisor for Driver')),
                ('driver_trip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='drivers_trip', to='trips.Trip')),
                ('human_resources', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='certified_trips', to=settings.AUTH_USER_MODEL)),
                ('office', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Office')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to=settings.AUTH_USER_MODEL, verbose_name=b'Traveller')),
                ('partners', models.ManyToManyField(blank=True, to='partners.PartnerOrganization')),
                ('pcas', models.ManyToManyField(blank=True, to='partners.PCA', verbose_name='Related Interventions')),
                ('programme_assistant', models.ForeignKey(blank=True, help_text=b'Needed if a Travel Authorisation (TA) is required', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='managed_trips', to=settings.AUTH_USER_MODEL, verbose_name=b'Staff Responsible for TA')),
                ('representative', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_trips', to=settings.AUTH_USER_MODEL)),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Section')),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supervised_trips', to=settings.AUTH_USER_MODEL)),
                ('travel_assistant', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='organised_trips', to=settings.AUTH_USER_MODEL, verbose_name=b'Travel focal point')),
                ('vision_approver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name=b'VISION Approver')),
            ],
            options={
                'ordering': ['-created_date'],
            },
            bases=(EquiTrack.mixins.AdminURLMixin, models.Model),
        ),
        migrations.CreateModel(
            name='TripFunds',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveIntegerField(verbose_name=b'Percentage (%)')),
                ('grant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='funds.Grant')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trips.Trip')),
                ('wbs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='reports.Result', verbose_name=b'WBS')),
            ],
            options={
                'verbose_name': 'Funding',
                'verbose_name_plural': 'Funding',
            },
        ),
        migrations.CreateModel(
            name='TripLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('governorate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Governorate')),
                ('locality', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Locality')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Location')),
                ('region', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='locations.Region')),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trips.Trip')),
            ],
            options={
                'ordering': ['id'],
            },
        ),
        migrations.AddField(
            model_name='travelroutes',
            name='trip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trips.Trip'),
        ),
        migrations.AddField(
            model_name='linkedpartner',
            name='trip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trips.Trip'),
        ),
        migrations.AddField(
            model_name='linkedgovernmentpartner',
            name='trip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trips.Trip'),
        ),
        migrations.AddField(
            model_name='fileattachment',
            name='trip',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='files', to='trips.Trip'),
        ),
        migrations.AddField(
            model_name='fileattachment',
            name='type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='partners.FileType'),
        ),
        migrations.AddField(
            model_name='actionpoint',
            name='trip',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trips.Trip'),
        ),
    ]
